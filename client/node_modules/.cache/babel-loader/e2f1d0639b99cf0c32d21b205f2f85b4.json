{"ast":null,"code":"'use strict';\n/**\n * A builder builds command line arguments for ping in window environment\n * @module lib/builder/win\n */\n\nvar util = require('util');\n\nvar builder = {};\n/**\n * Cross platform config representation\n * @typedef {Object} PingConfig\n * @property {boolean} numeric - Map IP address to hostname or not\n * @property {number} timeout - Timeout in seconds for each ping request\n * @property {number} min_reply - Exit after sending number of ECHO_REQUEST\n * @property {boolean} v6 - Use IPv4 (default) or IPv6\n * @property {string} sourceAddr - source address for sending the ping\n * @property {number} packetSize - Specifies the number of data bytes to be sent\n *                                 Default: Linux / MAC: 56 Bytes,\n *                                          Window: 32 Bytes\n * @property {string[]} extra - Optional options does not provided\n */\n\nvar defaultConfig = {\n  numeric: true,\n  timeout: 5,\n  min_reply: 1,\n  v6: false,\n  sourceAddr: '',\n  packetSize: 32,\n  extra: []\n};\n/**\n * Get the finalized array of command line arguments\n * @param {string} target - hostname or ip address\n * @param {PingConfig} [config] - Configuration object for cmd line argument\n * @return {string[]} - Command line argument according to the configuration\n */\n\nbuilder.getCommandArguments = function (target, config) {\n  var _config = config || {}; // Empty argument\n\n\n  var ret = []; // Make every key in config has been setup properly\n\n  var keys = ['numeric', 'timeout', 'min_reply', 'v6', 'sourceAddr', 'extra', 'packetSize'];\n  keys.forEach(function (k) {\n    // Falsy value will be overrided without below checking\n    if (typeof _config[k] !== 'boolean') {\n      _config[k] = _config[k] || defaultConfig[k];\n    }\n  });\n  ret.push(_config.v6 ? '-6' : '-4');\n\n  if (!_config.numeric) {\n    ret.push('-a');\n  }\n\n  if (_config.timeout) {\n    // refs #56: Unit problem\n    // Our timeout is in second while timeout in window is in milliseconds\n    // so we need to convert our units accordingly\n    ret = ret.concat(['-w', util.format('%d', _config.timeout * 1000)]);\n  }\n\n  if (_config.deadline) {\n    throw new Error('There is no deadline option on windows');\n  }\n\n  if (_config.min_reply) {\n    ret = ret.concat(['-n', util.format('%d', _config.min_reply)]);\n  }\n\n  if (_config.sourceAddr) {\n    ret = ret.concat(['-S', util.format('%s', _config.sourceAddr)]);\n  }\n\n  if (_config.packetSize) {\n    ret = ret.concat(['-l', util.format('%d', _config.packetSize)]);\n  }\n\n  if (_config.extra) {\n    ret = ret.concat(_config.extra);\n  }\n\n  ret.push(target);\n  return ret;\n};\n/**\n * Compute an option object for child_process.spawn\n * @return {object} - Refer to document of child_process.spawn\n */\n\n\nbuilder.getSpawnOptions = function () {\n  return {\n    windowsHide: true\n  };\n};\n\nmodule.exports = builder;","map":{"version":3,"sources":["/home/maira/Desktop/system-ping-project/client/node_modules/ping/lib/builder/win.js"],"names":["util","require","builder","defaultConfig","numeric","timeout","min_reply","v6","sourceAddr","packetSize","extra","getCommandArguments","target","config","_config","ret","keys","forEach","k","push","concat","format","deadline","Error","getSpawnOptions","windowsHide","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * A builder builds command line arguments for ping in window environment\n * @module lib/builder/win\n */\nvar util = require('util');\n\nvar builder = {};\n\n/**\n * Cross platform config representation\n * @typedef {Object} PingConfig\n * @property {boolean} numeric - Map IP address to hostname or not\n * @property {number} timeout - Timeout in seconds for each ping request\n * @property {number} min_reply - Exit after sending number of ECHO_REQUEST\n * @property {boolean} v6 - Use IPv4 (default) or IPv6\n * @property {string} sourceAddr - source address for sending the ping\n * @property {number} packetSize - Specifies the number of data bytes to be sent\n *                                 Default: Linux / MAC: 56 Bytes,\n *                                          Window: 32 Bytes\n * @property {string[]} extra - Optional options does not provided\n */\n\nvar defaultConfig = {\n    numeric: true,\n    timeout: 5,\n    min_reply: 1,\n    v6: false,\n    sourceAddr: '',\n    packetSize: 32,\n    extra: [],\n};\n\n/**\n * Get the finalized array of command line arguments\n * @param {string} target - hostname or ip address\n * @param {PingConfig} [config] - Configuration object for cmd line argument\n * @return {string[]} - Command line argument according to the configuration\n */\nbuilder.getCommandArguments = function (target, config) {\n    var _config = config || {};\n\n    // Empty argument\n    var ret = [];\n\n    // Make every key in config has been setup properly\n    var keys = [\n        'numeric', 'timeout', 'min_reply', 'v6', 'sourceAddr', 'extra',\n        'packetSize',\n    ];\n    keys.forEach(function (k) {\n        // Falsy value will be overrided without below checking\n        if (typeof(_config[k]) !== 'boolean') {\n            _config[k] = _config[k] || defaultConfig[k];\n        }\n    });\n\n    ret.push(_config.v6 ? '-6' : '-4');\n\n    if (!_config.numeric) {\n        ret.push('-a');\n    }\n\n    if (_config.timeout) {\n        // refs #56: Unit problem\n        // Our timeout is in second while timeout in window is in milliseconds\n        // so we need to convert our units accordingly\n        ret = ret.concat([\n            '-w',\n            util.format('%d', _config.timeout * 1000),\n        ]);\n    }\n\n    if (_config.deadline) {\n        throw new Error('There is no deadline option on windows');\n    }\n\n    if (_config.min_reply) {\n        ret = ret.concat([\n            '-n',\n            util.format('%d', _config.min_reply),\n        ]);\n    }\n\n    if (_config.sourceAddr) {\n        ret = ret.concat([\n            '-S',\n            util.format('%s', _config.sourceAddr),\n        ]);\n    }\n\n    if (_config.packetSize) {\n        ret = ret.concat([\n            '-l',\n            util.format('%d', _config.packetSize),\n        ]);\n    }\n\n    if (_config.extra) {\n        ret = ret.concat(_config.extra);\n    }\n\n    ret.push(target);\n\n    return ret;\n};\n\n/**\n * Compute an option object for child_process.spawn\n * @return {object} - Refer to document of child_process.spawn\n */\nbuilder.getSpawnOptions = function () {\n    return {\n        windowsHide: true,\n    };\n};\n\nmodule.exports = builder;\n"]},"metadata":{},"sourceType":"script"}