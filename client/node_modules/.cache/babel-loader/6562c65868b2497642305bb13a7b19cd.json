{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformArguments = exports.ClientKillFilters = void 0;\nvar ClientKillFilters;\n\n(function (ClientKillFilters) {\n  ClientKillFilters[\"ADDRESS\"] = \"ADDR\";\n  ClientKillFilters[\"LOCAL_ADDRESS\"] = \"LADDR\";\n  ClientKillFilters[\"ID\"] = \"ID\";\n  ClientKillFilters[\"TYPE\"] = \"TYPE\";\n  ClientKillFilters[\"USER\"] = \"USER\";\n  ClientKillFilters[\"SKIP_ME\"] = \"SKIPME\";\n})(ClientKillFilters = exports.ClientKillFilters || (exports.ClientKillFilters = {}));\n\nfunction transformArguments(filters) {\n  const args = ['CLIENT', 'KILL'];\n\n  if (Array.isArray(filters)) {\n    for (const filter of filters) {\n      pushFilter(args, filter);\n    }\n  } else {\n    pushFilter(args, filters);\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nfunction pushFilter(args, filter) {\n  if (filter === ClientKillFilters.SKIP_ME) {\n    args.push('SKIPME');\n    return;\n  }\n\n  args.push(filter.filter);\n\n  switch (filter.filter) {\n    case ClientKillFilters.ADDRESS:\n      args.push(filter.address);\n      break;\n\n    case ClientKillFilters.LOCAL_ADDRESS:\n      args.push(filter.localAddress);\n      break;\n\n    case ClientKillFilters.ID:\n      args.push(typeof filter.id === 'number' ? filter.id.toString() : filter.id);\n      break;\n\n    case ClientKillFilters.TYPE:\n      args.push(filter.type);\n      break;\n\n    case ClientKillFilters.USER:\n      args.push(filter.username);\n      break;\n\n    case ClientKillFilters.SKIP_ME:\n      args.push(filter.skipMe ? 'yes' : 'no');\n      break;\n  }\n}","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/CLIENT_KILL.js"],"names":["Object","defineProperty","exports","value","transformArguments","ClientKillFilters","filters","args","Array","isArray","filter","pushFilter","SKIP_ME","push","ADDRESS","address","LOCAL_ADDRESS","localAddress","ID","id","toString","TYPE","type","USER","username","skipMe"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,iBAAR,GAA4B,KAAK,CAA9D;AACA,IAAIA,iBAAJ;;AACA,CAAC,UAAUA,iBAAV,EAA6B;AAC1BA,EAAAA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,MAA/B;AACAA,EAAAA,iBAAiB,CAAC,eAAD,CAAjB,GAAqC,OAArC;AACAA,EAAAA,iBAAiB,CAAC,IAAD,CAAjB,GAA0B,IAA1B;AACAA,EAAAA,iBAAiB,CAAC,MAAD,CAAjB,GAA4B,MAA5B;AACAA,EAAAA,iBAAiB,CAAC,MAAD,CAAjB,GAA4B,MAA5B;AACAA,EAAAA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,QAA/B;AACH,CAPD,EAOGA,iBAAiB,GAAGH,OAAO,CAACG,iBAAR,KAA8BH,OAAO,CAACG,iBAAR,GAA4B,EAA1D,CAPvB;;AAQA,SAASD,kBAAT,CAA4BE,OAA5B,EAAqC;AACjC,QAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,MAAX,CAAb;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAJ,EAA4B;AACxB,SAAK,MAAMI,MAAX,IAAqBJ,OAArB,EAA8B;AAC1BK,MAAAA,UAAU,CAACJ,IAAD,EAAOG,MAAP,CAAV;AACH;AACJ,GAJD,MAKK;AACDC,IAAAA,UAAU,CAACJ,IAAD,EAAOD,OAAP,CAAV;AACH;;AACD,SAAOC,IAAP;AACH;;AACDL,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AACA,SAASO,UAAT,CAAoBJ,IAApB,EAA0BG,MAA1B,EAAkC;AAC9B,MAAIA,MAAM,KAAKL,iBAAiB,CAACO,OAAjC,EAA0C;AACtCL,IAAAA,IAAI,CAACM,IAAL,CAAU,QAAV;AACA;AACH;;AACDN,EAAAA,IAAI,CAACM,IAAL,CAAUH,MAAM,CAACA,MAAjB;;AACA,UAAQA,MAAM,CAACA,MAAf;AACI,SAAKL,iBAAiB,CAACS,OAAvB;AACIP,MAAAA,IAAI,CAACM,IAAL,CAAUH,MAAM,CAACK,OAAjB;AACA;;AACJ,SAAKV,iBAAiB,CAACW,aAAvB;AACIT,MAAAA,IAAI,CAACM,IAAL,CAAUH,MAAM,CAACO,YAAjB;AACA;;AACJ,SAAKZ,iBAAiB,CAACa,EAAvB;AACIX,MAAAA,IAAI,CAACM,IAAL,CAAU,OAAOH,MAAM,CAACS,EAAd,KAAqB,QAArB,GACNT,MAAM,CAACS,EAAP,CAAUC,QAAV,EADM,GAENV,MAAM,CAACS,EAFX;AAGA;;AACJ,SAAKd,iBAAiB,CAACgB,IAAvB;AACId,MAAAA,IAAI,CAACM,IAAL,CAAUH,MAAM,CAACY,IAAjB;AACA;;AACJ,SAAKjB,iBAAiB,CAACkB,IAAvB;AACIhB,MAAAA,IAAI,CAACM,IAAL,CAAUH,MAAM,CAACc,QAAjB;AACA;;AACJ,SAAKnB,iBAAiB,CAACO,OAAvB;AACIL,MAAAA,IAAI,CAACM,IAAL,CAAUH,MAAM,CAACe,MAAP,GAAgB,KAAhB,GAAwB,IAAlC;AACA;AApBR;AAsBH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformArguments = exports.ClientKillFilters = void 0;\nvar ClientKillFilters;\n(function (ClientKillFilters) {\n    ClientKillFilters[\"ADDRESS\"] = \"ADDR\";\n    ClientKillFilters[\"LOCAL_ADDRESS\"] = \"LADDR\";\n    ClientKillFilters[\"ID\"] = \"ID\";\n    ClientKillFilters[\"TYPE\"] = \"TYPE\";\n    ClientKillFilters[\"USER\"] = \"USER\";\n    ClientKillFilters[\"SKIP_ME\"] = \"SKIPME\";\n})(ClientKillFilters = exports.ClientKillFilters || (exports.ClientKillFilters = {}));\nfunction transformArguments(filters) {\n    const args = ['CLIENT', 'KILL'];\n    if (Array.isArray(filters)) {\n        for (const filter of filters) {\n            pushFilter(args, filter);\n        }\n    }\n    else {\n        pushFilter(args, filters);\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction pushFilter(args, filter) {\n    if (filter === ClientKillFilters.SKIP_ME) {\n        args.push('SKIPME');\n        return;\n    }\n    args.push(filter.filter);\n    switch (filter.filter) {\n        case ClientKillFilters.ADDRESS:\n            args.push(filter.address);\n            break;\n        case ClientKillFilters.LOCAL_ADDRESS:\n            args.push(filter.localAddress);\n            break;\n        case ClientKillFilters.ID:\n            args.push(typeof filter.id === 'number' ?\n                filter.id.toString() :\n                filter.id);\n            break;\n        case ClientKillFilters.TYPE:\n            args.push(filter.type);\n            break;\n        case ClientKillFilters.USER:\n            args.push(filter.username);\n            break;\n        case ClientKillFilters.SKIP_ME:\n            args.push(filter.skipMe ? 'yes' : 'no');\n            break;\n    }\n}\n"]},"metadata":{},"sourceType":"script"}