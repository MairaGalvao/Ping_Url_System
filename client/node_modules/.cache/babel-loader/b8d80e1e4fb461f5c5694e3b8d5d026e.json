{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformCommandReply = exports.CommandCategories = exports.CommandFlags = exports.pushOptionalVerdictArgument = exports.pushVerdictArgument = exports.pushVerdictArguments = exports.pushEvalArguments = exports.transformPXAT = exports.transformEXAT = exports.transformGeoMembersWithReply = exports.GeoReplyWith = exports.pushGeoSearchArguments = exports.pushGeoCountArgument = exports.transformSortedSetWithScoresReply = exports.transformSortedSetMemberNullReply = exports.transformStreamsMessagesReply = exports.transformStreamMessagesReply = exports.transformTuplesReply = exports.transformStringNumberInfinityArgument = exports.transformNumberInfinityArgument = exports.transformNumberInfinityNullArrayReply = exports.transformNumberInfinityNullReply = exports.transformNumberInfinityReply = exports.pushScanArguments = exports.transformBooleanArrayReply = exports.transformBooleanReply = void 0;\n\nfunction transformBooleanReply(reply) {\n  return reply === 1;\n}\n\nexports.transformBooleanReply = transformBooleanReply;\n\nfunction transformBooleanArrayReply(reply) {\n  return reply.map(transformBooleanReply);\n}\n\nexports.transformBooleanArrayReply = transformBooleanArrayReply;\n\nfunction pushScanArguments(args, cursor, options) {\n  args.push(cursor.toString());\n\n  if (options === null || options === void 0 ? void 0 : options.MATCH) {\n    args.push('MATCH', options.MATCH);\n  }\n\n  if (options === null || options === void 0 ? void 0 : options.COUNT) {\n    args.push('COUNT', options.COUNT.toString());\n  }\n\n  return args;\n}\n\nexports.pushScanArguments = pushScanArguments;\n\nfunction transformNumberInfinityReply(reply) {\n  switch (reply.toString()) {\n    case '+inf':\n      return Infinity;\n\n    case '-inf':\n      return -Infinity;\n\n    default:\n      return Number(reply);\n  }\n}\n\nexports.transformNumberInfinityReply = transformNumberInfinityReply;\n\nfunction transformNumberInfinityNullReply(reply) {\n  if (reply === null) return null;\n  return transformNumberInfinityReply(reply);\n}\n\nexports.transformNumberInfinityNullReply = transformNumberInfinityNullReply;\n\nfunction transformNumberInfinityNullArrayReply(reply) {\n  return reply.map(transformNumberInfinityNullReply);\n}\n\nexports.transformNumberInfinityNullArrayReply = transformNumberInfinityNullArrayReply;\n\nfunction transformNumberInfinityArgument(num) {\n  switch (num) {\n    case Infinity:\n      return '+inf';\n\n    case -Infinity:\n      return '-inf';\n\n    default:\n      return num.toString();\n  }\n}\n\nexports.transformNumberInfinityArgument = transformNumberInfinityArgument;\n\nfunction transformStringNumberInfinityArgument(num) {\n  if (typeof num !== 'number') return num;\n  return transformNumberInfinityArgument(num);\n}\n\nexports.transformStringNumberInfinityArgument = transformStringNumberInfinityArgument;\n\nfunction transformTuplesReply(reply) {\n  const message = Object.create(null);\n\n  for (let i = 0; i < reply.length; i += 2) {\n    message[reply[i].toString()] = reply[i + 1];\n  }\n\n  return message;\n}\n\nexports.transformTuplesReply = transformTuplesReply;\n\nfunction transformStreamMessagesReply(reply) {\n  const messages = [];\n\n  for (const [id, message] of reply) {\n    messages.push({\n      id,\n      message: transformTuplesReply(message)\n    });\n  }\n\n  return messages;\n}\n\nexports.transformStreamMessagesReply = transformStreamMessagesReply;\n\nfunction transformStreamsMessagesReply(reply) {\n  if (reply === null) return null;\n  return reply.map(_ref => {\n    let [name, rawMessages] = _ref;\n    return {\n      name,\n      messages: transformStreamMessagesReply(rawMessages)\n    };\n  });\n}\n\nexports.transformStreamsMessagesReply = transformStreamsMessagesReply;\n\nfunction transformSortedSetMemberNullReply(reply) {\n  if (!reply.length) return null;\n  return {\n    value: reply[0],\n    score: transformNumberInfinityReply(reply[1])\n  };\n}\n\nexports.transformSortedSetMemberNullReply = transformSortedSetMemberNullReply;\n\nfunction transformSortedSetWithScoresReply(reply) {\n  const members = [];\n\n  for (let i = 0; i < reply.length; i += 2) {\n    members.push({\n      value: reply[i],\n      score: transformNumberInfinityReply(reply[i + 1])\n    });\n  }\n\n  return members;\n}\n\nexports.transformSortedSetWithScoresReply = transformSortedSetWithScoresReply;\n\nfunction pushGeoCountArgument(args, count) {\n  if (typeof count === 'number') {\n    args.push('COUNT', count.toString());\n  } else if (count) {\n    args.push('COUNT', count.value.toString());\n\n    if (count.ANY) {\n      args.push('ANY');\n    }\n  }\n\n  return args;\n}\n\nexports.pushGeoCountArgument = pushGeoCountArgument;\n\nfunction pushGeoSearchArguments(args, key, from, by, options) {\n  args.push(key);\n\n  if (typeof from === 'string') {\n    args.push('FROMMEMBER', from);\n  } else {\n    args.push('FROMLONLAT', from.longitude.toString(), from.latitude.toString());\n  }\n\n  if ('radius' in by) {\n    args.push('BYRADIUS', by.radius.toString());\n  } else {\n    args.push('BYBOX', by.width.toString(), by.height.toString());\n  }\n\n  args.push(by.unit);\n\n  if (options === null || options === void 0 ? void 0 : options.SORT) {\n    args.push(options.SORT);\n  }\n\n  pushGeoCountArgument(args, options === null || options === void 0 ? void 0 : options.COUNT);\n  return args;\n}\n\nexports.pushGeoSearchArguments = pushGeoSearchArguments;\nvar GeoReplyWith;\n\n(function (GeoReplyWith) {\n  GeoReplyWith[\"DISTANCE\"] = \"WITHDIST\";\n  GeoReplyWith[\"HASH\"] = \"WITHHASH\";\n  GeoReplyWith[\"COORDINATES\"] = \"WITHCOORD\";\n})(GeoReplyWith = exports.GeoReplyWith || (exports.GeoReplyWith = {}));\n\nfunction transformGeoMembersWithReply(reply, replyWith) {\n  const replyWithSet = new Set(replyWith);\n  let index = 0;\n  const distanceIndex = replyWithSet.has(GeoReplyWith.DISTANCE) && ++index,\n        hashIndex = replyWithSet.has(GeoReplyWith.HASH) && ++index,\n        coordinatesIndex = replyWithSet.has(GeoReplyWith.COORDINATES) && ++index;\n  return reply.map(member => {\n    const transformedMember = {\n      member: member[0]\n    };\n\n    if (distanceIndex) {\n      transformedMember.distance = member[distanceIndex];\n    }\n\n    if (hashIndex) {\n      transformedMember.hash = member[hashIndex];\n    }\n\n    if (coordinatesIndex) {\n      const [longitude, latitude] = member[coordinatesIndex];\n      transformedMember.coordinates = {\n        longitude,\n        latitude\n      };\n    }\n\n    return transformedMember;\n  });\n}\n\nexports.transformGeoMembersWithReply = transformGeoMembersWithReply;\n\nfunction transformEXAT(EXAT) {\n  return (typeof EXAT === 'number' ? EXAT : Math.floor(EXAT.getTime() / 1000)).toString();\n}\n\nexports.transformEXAT = transformEXAT;\n\nfunction transformPXAT(PXAT) {\n  return (typeof PXAT === 'number' ? PXAT : PXAT.getTime()).toString();\n}\n\nexports.transformPXAT = transformPXAT;\n\nfunction pushEvalArguments(args, options) {\n  if (options === null || options === void 0 ? void 0 : options.keys) {\n    args.push(options.keys.length.toString(), ...options.keys);\n  } else {\n    args.push('0');\n  }\n\n  if (options === null || options === void 0 ? void 0 : options.arguments) {\n    args.push(...options.arguments);\n  }\n\n  return args;\n}\n\nexports.pushEvalArguments = pushEvalArguments;\n\nfunction pushVerdictArguments(args, value) {\n  if (Array.isArray(value)) {\n    args.push(...value);\n  } else {\n    args.push(value);\n  }\n\n  return args;\n}\n\nexports.pushVerdictArguments = pushVerdictArguments;\n\nfunction pushVerdictArgument(args, value) {\n  if (Array.isArray(value)) {\n    args.push(value.length.toString(), ...value);\n  } else {\n    args.push('1', value);\n  }\n\n  return args;\n}\n\nexports.pushVerdictArgument = pushVerdictArgument;\n\nfunction pushOptionalVerdictArgument(args, name, value) {\n  if (value === undefined) return args;\n  args.push(name);\n  return pushVerdictArgument(args, value);\n}\n\nexports.pushOptionalVerdictArgument = pushOptionalVerdictArgument;\nvar CommandFlags;\n\n(function (CommandFlags) {\n  CommandFlags[\"WRITE\"] = \"write\";\n  CommandFlags[\"READONLY\"] = \"readonly\";\n  CommandFlags[\"DENYOOM\"] = \"denyoom\";\n  CommandFlags[\"ADMIN\"] = \"admin\";\n  CommandFlags[\"PUBSUB\"] = \"pubsub\";\n  CommandFlags[\"NOSCRIPT\"] = \"noscript\";\n  CommandFlags[\"RANDOM\"] = \"random\";\n  CommandFlags[\"SORT_FOR_SCRIPT\"] = \"sort_for_script\";\n  CommandFlags[\"LOADING\"] = \"loading\";\n  CommandFlags[\"STALE\"] = \"stale\";\n  CommandFlags[\"SKIP_MONITOR\"] = \"skip_monitor\";\n  CommandFlags[\"ASKING\"] = \"asking\";\n  CommandFlags[\"FAST\"] = \"fast\";\n  CommandFlags[\"MOVABLEKEYS\"] = \"movablekeys\"; // keys have no pre-determined position. You must discover keys yourself.\n})(CommandFlags = exports.CommandFlags || (exports.CommandFlags = {}));\n\nvar CommandCategories;\n\n(function (CommandCategories) {\n  CommandCategories[\"KEYSPACE\"] = \"@keyspace\";\n  CommandCategories[\"READ\"] = \"@read\";\n  CommandCategories[\"WRITE\"] = \"@write\";\n  CommandCategories[\"SET\"] = \"@set\";\n  CommandCategories[\"SORTEDSET\"] = \"@sortedset\";\n  CommandCategories[\"LIST\"] = \"@list\";\n  CommandCategories[\"HASH\"] = \"@hash\";\n  CommandCategories[\"STRING\"] = \"@string\";\n  CommandCategories[\"BITMAP\"] = \"@bitmap\";\n  CommandCategories[\"HYPERLOGLOG\"] = \"@hyperloglog\";\n  CommandCategories[\"GEO\"] = \"@geo\";\n  CommandCategories[\"STREAM\"] = \"@stream\";\n  CommandCategories[\"PUBSUB\"] = \"@pubsub\";\n  CommandCategories[\"ADMIN\"] = \"@admin\";\n  CommandCategories[\"FAST\"] = \"@fast\";\n  CommandCategories[\"SLOW\"] = \"@slow\";\n  CommandCategories[\"BLOCKING\"] = \"@blocking\";\n  CommandCategories[\"DANGEROUS\"] = \"@dangerous\";\n  CommandCategories[\"CONNECTION\"] = \"@connection\";\n  CommandCategories[\"TRANSACTION\"] = \"@transaction\";\n  CommandCategories[\"SCRIPTING\"] = \"@scripting\";\n})(CommandCategories = exports.CommandCategories || (exports.CommandCategories = {}));\n\nfunction transformCommandReply(_ref2) {\n  let [name, arity, flags, firstKeyIndex, lastKeyIndex, step, categories] = _ref2;\n  return {\n    name,\n    arity,\n    flags: new Set(flags),\n    firstKeyIndex,\n    lastKeyIndex,\n    step,\n    categories: new Set(categories)\n  };\n}\n\nexports.transformCommandReply = transformCommandReply;","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/generic-transformers.js"],"names":["Object","defineProperty","exports","value","transformCommandReply","CommandCategories","CommandFlags","pushOptionalVerdictArgument","pushVerdictArgument","pushVerdictArguments","pushEvalArguments","transformPXAT","transformEXAT","transformGeoMembersWithReply","GeoReplyWith","pushGeoSearchArguments","pushGeoCountArgument","transformSortedSetWithScoresReply","transformSortedSetMemberNullReply","transformStreamsMessagesReply","transformStreamMessagesReply","transformTuplesReply","transformStringNumberInfinityArgument","transformNumberInfinityArgument","transformNumberInfinityNullArrayReply","transformNumberInfinityNullReply","transformNumberInfinityReply","pushScanArguments","transformBooleanArrayReply","transformBooleanReply","reply","map","args","cursor","options","push","toString","MATCH","COUNT","Infinity","Number","num","message","create","i","length","messages","id","name","rawMessages","score","members","count","ANY","key","from","by","longitude","latitude","radius","width","height","unit","SORT","replyWith","replyWithSet","Set","index","distanceIndex","has","DISTANCE","hashIndex","HASH","coordinatesIndex","COORDINATES","member","transformedMember","distance","hash","coordinates","EXAT","Math","floor","getTime","PXAT","keys","arguments","Array","isArray","undefined","arity","flags","firstKeyIndex","lastKeyIndex","step","categories"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformCommandReply = exports.CommandCategories = exports.CommandFlags = exports.pushOptionalVerdictArgument = exports.pushVerdictArgument = exports.pushVerdictArguments = exports.pushEvalArguments = exports.transformPXAT = exports.transformEXAT = exports.transformGeoMembersWithReply = exports.GeoReplyWith = exports.pushGeoSearchArguments = exports.pushGeoCountArgument = exports.transformSortedSetWithScoresReply = exports.transformSortedSetMemberNullReply = exports.transformStreamsMessagesReply = exports.transformStreamMessagesReply = exports.transformTuplesReply = exports.transformStringNumberInfinityArgument = exports.transformNumberInfinityArgument = exports.transformNumberInfinityNullArrayReply = exports.transformNumberInfinityNullReply = exports.transformNumberInfinityReply = exports.pushScanArguments = exports.transformBooleanArrayReply = exports.transformBooleanReply = void 0;\nfunction transformBooleanReply(reply) {\n    return reply === 1;\n}\nexports.transformBooleanReply = transformBooleanReply;\nfunction transformBooleanArrayReply(reply) {\n    return reply.map(transformBooleanReply);\n}\nexports.transformBooleanArrayReply = transformBooleanArrayReply;\nfunction pushScanArguments(args, cursor, options) {\n    args.push(cursor.toString());\n    if (options === null || options === void 0 ? void 0 : options.MATCH) {\n        args.push('MATCH', options.MATCH);\n    }\n    if (options === null || options === void 0 ? void 0 : options.COUNT) {\n        args.push('COUNT', options.COUNT.toString());\n    }\n    return args;\n}\nexports.pushScanArguments = pushScanArguments;\nfunction transformNumberInfinityReply(reply) {\n    switch (reply.toString()) {\n        case '+inf':\n            return Infinity;\n        case '-inf':\n            return -Infinity;\n        default:\n            return Number(reply);\n    }\n}\nexports.transformNumberInfinityReply = transformNumberInfinityReply;\nfunction transformNumberInfinityNullReply(reply) {\n    if (reply === null)\n        return null;\n    return transformNumberInfinityReply(reply);\n}\nexports.transformNumberInfinityNullReply = transformNumberInfinityNullReply;\nfunction transformNumberInfinityNullArrayReply(reply) {\n    return reply.map(transformNumberInfinityNullReply);\n}\nexports.transformNumberInfinityNullArrayReply = transformNumberInfinityNullArrayReply;\nfunction transformNumberInfinityArgument(num) {\n    switch (num) {\n        case Infinity:\n            return '+inf';\n        case -Infinity:\n            return '-inf';\n        default:\n            return num.toString();\n    }\n}\nexports.transformNumberInfinityArgument = transformNumberInfinityArgument;\nfunction transformStringNumberInfinityArgument(num) {\n    if (typeof num !== 'number')\n        return num;\n    return transformNumberInfinityArgument(num);\n}\nexports.transformStringNumberInfinityArgument = transformStringNumberInfinityArgument;\nfunction transformTuplesReply(reply) {\n    const message = Object.create(null);\n    for (let i = 0; i < reply.length; i += 2) {\n        message[reply[i].toString()] = reply[i + 1];\n    }\n    return message;\n}\nexports.transformTuplesReply = transformTuplesReply;\nfunction transformStreamMessagesReply(reply) {\n    const messages = [];\n    for (const [id, message] of reply) {\n        messages.push({\n            id,\n            message: transformTuplesReply(message)\n        });\n    }\n    return messages;\n}\nexports.transformStreamMessagesReply = transformStreamMessagesReply;\nfunction transformStreamsMessagesReply(reply) {\n    if (reply === null)\n        return null;\n    return reply.map(([name, rawMessages]) => ({\n        name,\n        messages: transformStreamMessagesReply(rawMessages)\n    }));\n}\nexports.transformStreamsMessagesReply = transformStreamsMessagesReply;\nfunction transformSortedSetMemberNullReply(reply) {\n    if (!reply.length)\n        return null;\n    return {\n        value: reply[0],\n        score: transformNumberInfinityReply(reply[1])\n    };\n}\nexports.transformSortedSetMemberNullReply = transformSortedSetMemberNullReply;\nfunction transformSortedSetWithScoresReply(reply) {\n    const members = [];\n    for (let i = 0; i < reply.length; i += 2) {\n        members.push({\n            value: reply[i],\n            score: transformNumberInfinityReply(reply[i + 1])\n        });\n    }\n    return members;\n}\nexports.transformSortedSetWithScoresReply = transformSortedSetWithScoresReply;\nfunction pushGeoCountArgument(args, count) {\n    if (typeof count === 'number') {\n        args.push('COUNT', count.toString());\n    }\n    else if (count) {\n        args.push('COUNT', count.value.toString());\n        if (count.ANY) {\n            args.push('ANY');\n        }\n    }\n    return args;\n}\nexports.pushGeoCountArgument = pushGeoCountArgument;\nfunction pushGeoSearchArguments(args, key, from, by, options) {\n    args.push(key);\n    if (typeof from === 'string') {\n        args.push('FROMMEMBER', from);\n    }\n    else {\n        args.push('FROMLONLAT', from.longitude.toString(), from.latitude.toString());\n    }\n    if ('radius' in by) {\n        args.push('BYRADIUS', by.radius.toString());\n    }\n    else {\n        args.push('BYBOX', by.width.toString(), by.height.toString());\n    }\n    args.push(by.unit);\n    if (options === null || options === void 0 ? void 0 : options.SORT) {\n        args.push(options.SORT);\n    }\n    pushGeoCountArgument(args, options === null || options === void 0 ? void 0 : options.COUNT);\n    return args;\n}\nexports.pushGeoSearchArguments = pushGeoSearchArguments;\nvar GeoReplyWith;\n(function (GeoReplyWith) {\n    GeoReplyWith[\"DISTANCE\"] = \"WITHDIST\";\n    GeoReplyWith[\"HASH\"] = \"WITHHASH\";\n    GeoReplyWith[\"COORDINATES\"] = \"WITHCOORD\";\n})(GeoReplyWith = exports.GeoReplyWith || (exports.GeoReplyWith = {}));\nfunction transformGeoMembersWithReply(reply, replyWith) {\n    const replyWithSet = new Set(replyWith);\n    let index = 0;\n    const distanceIndex = replyWithSet.has(GeoReplyWith.DISTANCE) && ++index, hashIndex = replyWithSet.has(GeoReplyWith.HASH) && ++index, coordinatesIndex = replyWithSet.has(GeoReplyWith.COORDINATES) && ++index;\n    return reply.map(member => {\n        const transformedMember = {\n            member: member[0]\n        };\n        if (distanceIndex) {\n            transformedMember.distance = member[distanceIndex];\n        }\n        if (hashIndex) {\n            transformedMember.hash = member[hashIndex];\n        }\n        if (coordinatesIndex) {\n            const [longitude, latitude] = member[coordinatesIndex];\n            transformedMember.coordinates = {\n                longitude,\n                latitude\n            };\n        }\n        return transformedMember;\n    });\n}\nexports.transformGeoMembersWithReply = transformGeoMembersWithReply;\nfunction transformEXAT(EXAT) {\n    return (typeof EXAT === 'number' ? EXAT : Math.floor(EXAT.getTime() / 1000)).toString();\n}\nexports.transformEXAT = transformEXAT;\nfunction transformPXAT(PXAT) {\n    return (typeof PXAT === 'number' ? PXAT : PXAT.getTime()).toString();\n}\nexports.transformPXAT = transformPXAT;\nfunction pushEvalArguments(args, options) {\n    if (options === null || options === void 0 ? void 0 : options.keys) {\n        args.push(options.keys.length.toString(), ...options.keys);\n    }\n    else {\n        args.push('0');\n    }\n    if (options === null || options === void 0 ? void 0 : options.arguments) {\n        args.push(...options.arguments);\n    }\n    return args;\n}\nexports.pushEvalArguments = pushEvalArguments;\nfunction pushVerdictArguments(args, value) {\n    if (Array.isArray(value)) {\n        args.push(...value);\n    }\n    else {\n        args.push(value);\n    }\n    return args;\n}\nexports.pushVerdictArguments = pushVerdictArguments;\nfunction pushVerdictArgument(args, value) {\n    if (Array.isArray(value)) {\n        args.push(value.length.toString(), ...value);\n    }\n    else {\n        args.push('1', value);\n    }\n    return args;\n}\nexports.pushVerdictArgument = pushVerdictArgument;\nfunction pushOptionalVerdictArgument(args, name, value) {\n    if (value === undefined)\n        return args;\n    args.push(name);\n    return pushVerdictArgument(args, value);\n}\nexports.pushOptionalVerdictArgument = pushOptionalVerdictArgument;\nvar CommandFlags;\n(function (CommandFlags) {\n    CommandFlags[\"WRITE\"] = \"write\";\n    CommandFlags[\"READONLY\"] = \"readonly\";\n    CommandFlags[\"DENYOOM\"] = \"denyoom\";\n    CommandFlags[\"ADMIN\"] = \"admin\";\n    CommandFlags[\"PUBSUB\"] = \"pubsub\";\n    CommandFlags[\"NOSCRIPT\"] = \"noscript\";\n    CommandFlags[\"RANDOM\"] = \"random\";\n    CommandFlags[\"SORT_FOR_SCRIPT\"] = \"sort_for_script\";\n    CommandFlags[\"LOADING\"] = \"loading\";\n    CommandFlags[\"STALE\"] = \"stale\";\n    CommandFlags[\"SKIP_MONITOR\"] = \"skip_monitor\";\n    CommandFlags[\"ASKING\"] = \"asking\";\n    CommandFlags[\"FAST\"] = \"fast\";\n    CommandFlags[\"MOVABLEKEYS\"] = \"movablekeys\"; // keys have no pre-determined position. You must discover keys yourself.\n})(CommandFlags = exports.CommandFlags || (exports.CommandFlags = {}));\nvar CommandCategories;\n(function (CommandCategories) {\n    CommandCategories[\"KEYSPACE\"] = \"@keyspace\";\n    CommandCategories[\"READ\"] = \"@read\";\n    CommandCategories[\"WRITE\"] = \"@write\";\n    CommandCategories[\"SET\"] = \"@set\";\n    CommandCategories[\"SORTEDSET\"] = \"@sortedset\";\n    CommandCategories[\"LIST\"] = \"@list\";\n    CommandCategories[\"HASH\"] = \"@hash\";\n    CommandCategories[\"STRING\"] = \"@string\";\n    CommandCategories[\"BITMAP\"] = \"@bitmap\";\n    CommandCategories[\"HYPERLOGLOG\"] = \"@hyperloglog\";\n    CommandCategories[\"GEO\"] = \"@geo\";\n    CommandCategories[\"STREAM\"] = \"@stream\";\n    CommandCategories[\"PUBSUB\"] = \"@pubsub\";\n    CommandCategories[\"ADMIN\"] = \"@admin\";\n    CommandCategories[\"FAST\"] = \"@fast\";\n    CommandCategories[\"SLOW\"] = \"@slow\";\n    CommandCategories[\"BLOCKING\"] = \"@blocking\";\n    CommandCategories[\"DANGEROUS\"] = \"@dangerous\";\n    CommandCategories[\"CONNECTION\"] = \"@connection\";\n    CommandCategories[\"TRANSACTION\"] = \"@transaction\";\n    CommandCategories[\"SCRIPTING\"] = \"@scripting\";\n})(CommandCategories = exports.CommandCategories || (exports.CommandCategories = {}));\nfunction transformCommandReply([name, arity, flags, firstKeyIndex, lastKeyIndex, step, categories]) {\n    return {\n        name,\n        arity,\n        flags: new Set(flags),\n        firstKeyIndex,\n        lastKeyIndex,\n        step,\n        categories: new Set(categories)\n    };\n}\nexports.transformCommandReply = transformCommandReply;\n"]},"metadata":{},"sourceType":"script"}