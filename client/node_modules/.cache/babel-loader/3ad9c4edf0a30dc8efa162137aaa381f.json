{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/Developer Projects/system-ping-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport AppDummy from './AppDummy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [userUrl, setUserUrl] = useState('');\n  const [postId, setPostId] = useState('');\n  const [pingData, setPingData] = useState();\n  const [urlData, setUrlData] = useState([]);\n  const [packetCount, setPacketCount] = useState(1);\n\n  function triggerPing() {\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: {\n        'Content-type': \"aplication/json\",\n        'url': userUrl,\n        'packets': packetCount\n      } // body: JSON.stringify({url: url }) \n\n    }).then(res => res.json(console.log(res, ' i am the res'))).then(data => {\n      setPingData(data.pingData);\n      setUrlData(data.urlData);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      class: \"pingMain\",\n      children: [\"    \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ping form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this), \"Host: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setUserUrl(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: 'flex'\n        },\n        children: [\"    \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"loader\",\n          children: [\"  Count:  \", packetCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        max: 20,\n        value: packetCount,\n        onChange: (event, newValue) => {\n          setPacketCount(newValue);\n        },\n        \"aria-label\": \"Disabled slider\",\n        style: {\n          width: '50%',\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: triggerPing,\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ouput:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"50\",\n        rows: \"20\",\n        value: JSON.stringify(pingData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AppDummy, {\n      urlData: urlData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"zQ8u54O26eJQyfXyYdD4+fOLoTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/client/src/App.js"],"names":["React","useState","useEffect","Box","Button","Slider","AppDummy","App","data","setData","userUrl","setUserUrl","postId","setPostId","pingData","setPingData","urlData","setUrlData","packetCount","setPacketCount","triggerPing","fetch","method","headers","then","res","json","console","log","event","target","value","display","newValue","width","margin","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport AppDummy from './AppDummy'\n\nfunction App() {\n  const [data, setData] = React.useState(null);\n  const [userUrl, setUserUrl] = useState('')\n  const [postId, setPostId] = useState('')\n  const [pingData, setPingData]  = useState()\n  const [urlData, setUrlData]  = useState([])\n\n  const [packetCount, setPacketCount]  = useState(1)\n  \n\nfunction triggerPing() {\n  \n  fetch(\"/api\", {\n    method: \"POST\",\n    headers: {\n      'Content-type' : \"aplication/json\",\n      'url' : userUrl,\n      'packets': packetCount\n\n            },\n    // body: JSON.stringify({url: url }) \n})\n .then((res) => res.json(console.log(res, ' i am the res')))\n .then((data) => {\n  setPingData(data.pingData)\n  setUrlData(data.urlData)\n\n  })\n\n  \n}\n\n\n\n\n\n  return <> \n \n   <Box class=\"pingMain\">    <h1>Ping form</h1>\n    \n\n     Host: <input  onChange={event => setUserUrl(event.target.value)}></input>\n  \n  <Box style={{display:'flex'}}>    <h2 class=\"loader\">  Count:  {packetCount}</h2> </Box>\n\n    <Slider   max={20} value={packetCount} onChange={(event, newValue) => {setPacketCount(newValue)}} aria-label=\"Disabled slider\" style={{width:'50%', margin:'10px'}}/>\n\n\n    \n      <Button  variant=\"outlined\" onClick={triggerPing}>Run</Button>\n    <h2>\n    Ouput:\n    </h2>\n  \n\n\n\n\n   \n\n\n <textarea  cols=\"50\"\n                rows=\"20\" value={JSON.stringify(pingData, null, 2) }></textarea>\n\n\n    </Box>\n  <AppDummy urlData={urlData}/>\n  \n  </>\n  \n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}