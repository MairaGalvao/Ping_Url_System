{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _RedisCluster_instances, _RedisCluster_options, _RedisCluster_slots, _RedisCluster_Multi, _RedisCluster_execute;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst commands_1 = require(\"./commands\");\n\nconst cluster_slots_1 = require(\"./cluster-slots\");\n\nconst commander_1 = require(\"../commander\");\n\nconst events_1 = require(\"events\");\n\nconst multi_command_1 = require(\"./multi-command\");\n\nclass RedisCluster extends events_1.EventEmitter {\n  constructor(options) {\n    super();\n\n    _RedisCluster_instances.add(this);\n\n    _RedisCluster_options.set(this, void 0);\n\n    _RedisCluster_slots.set(this, void 0);\n\n    _RedisCluster_Multi.set(this, void 0);\n\n    __classPrivateFieldSet(this, _RedisCluster_options, options, \"f\");\n\n    __classPrivateFieldSet(this, _RedisCluster_slots, new cluster_slots_1.default(options, err => this.emit('error', err)), \"f\");\n\n    __classPrivateFieldSet(this, _RedisCluster_Multi, multi_command_1.default.extend(options), \"f\");\n  }\n\n  static extractFirstKey(command, originalArgs, redisArgs) {\n    if (command.FIRST_KEY_INDEX === undefined) {\n      return undefined;\n    } else if (typeof command.FIRST_KEY_INDEX === 'number') {\n      return redisArgs[command.FIRST_KEY_INDEX];\n    }\n\n    return command.FIRST_KEY_INDEX(...originalArgs);\n  }\n\n  static create(options) {\n    return new ((0, commander_1.extendWithModulesAndScripts)({\n      BaseClass: RedisCluster,\n      modules: options === null || options === void 0 ? void 0 : options.modules,\n      modulesCommandsExecutor: RedisCluster.prototype.commandsExecutor,\n      scripts: options === null || options === void 0 ? void 0 : options.scripts,\n      scriptsExecutor: RedisCluster.prototype.scriptsExecutor\n    }))(options);\n  }\n\n  duplicate(overrides) {\n    return new (Object.getPrototypeOf(this).constructor)({ ...__classPrivateFieldGet(this, _RedisCluster_options, \"f\"),\n      ...overrides\n    });\n  }\n\n  async connect() {\n    return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").connect();\n  }\n\n  async commandsExecutor(command, args) {\n    const {\n      args: redisArgs,\n      options\n    } = (0, commander_1.transformCommandArguments)(command, args);\n    return (0, commander_1.transformCommandReply)(command, await this.sendCommand(RedisCluster.extractFirstKey(command, args, redisArgs), command.IS_READ_ONLY, redisArgs, options), redisArgs.preserve);\n  }\n\n  async sendCommand(firstKey, isReadonly, args, options) {\n    return __classPrivateFieldGet(this, _RedisCluster_instances, \"m\", _RedisCluster_execute).call(this, firstKey, isReadonly, client => client.sendCommand(args, options));\n  }\n\n  async scriptsExecutor(script, args) {\n    const {\n      args: redisArgs,\n      options\n    } = (0, commander_1.transformCommandArguments)(script, args);\n    return (0, commander_1.transformCommandReply)(script, await this.executeScript(script, args, redisArgs, options), redisArgs.preserve);\n  }\n\n  async executeScript(script, originalArgs, redisArgs, options) {\n    return __classPrivateFieldGet(this, _RedisCluster_instances, \"m\", _RedisCluster_execute).call(this, RedisCluster.extractFirstKey(script, originalArgs, redisArgs), script.IS_READ_ONLY, client => client.executeScript(script, redisArgs, options));\n  }\n\n  multi(routing) {\n    return new (__classPrivateFieldGet(this, _RedisCluster_Multi, \"f\"))((commands, firstKey, chainId) => {\n      return __classPrivateFieldGet(this, _RedisCluster_instances, \"m\", _RedisCluster_execute).call(this, firstKey, false, client => client.multiExecutor(commands, chainId));\n    }, routing);\n  }\n\n  getMasters() {\n    return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getMasters();\n  }\n\n  getSlotMaster(slot) {\n    return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getSlotMaster(slot);\n  }\n\n  quit() {\n    return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").quit();\n  }\n\n  disconnect() {\n    return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").disconnect();\n  }\n\n}\n\nexports.default = RedisCluster;\n_RedisCluster_options = new WeakMap(), _RedisCluster_slots = new WeakMap(), _RedisCluster_Multi = new WeakMap(), _RedisCluster_instances = new WeakSet(), _RedisCluster_execute = async function _RedisCluster_execute(firstKey, isReadonly, executor) {\n  var _a, _b;\n\n  const maxCommandRedirections = (_a = __classPrivateFieldGet(this, _RedisCluster_options, \"f\").maxCommandRedirections) !== null && _a !== void 0 ? _a : 16;\n\n  let client = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getClient(firstKey, isReadonly);\n\n  for (let i = 0;; i++) {\n    try {\n      return await executor(client);\n    } catch (err) {\n      if (++i > maxCommandRedirections || !(err instanceof Error)) {\n        throw err;\n      }\n\n      if (err.message.startsWith('ASK')) {\n        const address = err.message.substring(err.message.lastIndexOf(' ') + 1);\n\n        if (((_b = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getNodeByAddress(address)) === null || _b === void 0 ? void 0 : _b.client) === client) {\n          await client.asking();\n          continue;\n        }\n\n        await __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").rediscover(client);\n\n        const redirectTo = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getNodeByAddress(address);\n\n        if (!redirectTo) {\n          throw new Error(`Cannot find node ${address}`);\n        }\n\n        await redirectTo.client.asking();\n        client = redirectTo.client;\n        continue;\n      } else if (err.message.startsWith('MOVED')) {\n        await __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").rediscover(client);\n        client = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getClient(firstKey, isReadonly);\n        continue;\n      }\n\n      throw err;\n    }\n  }\n};\n(0, commander_1.extendWithCommands)({\n  BaseClass: RedisCluster,\n  commands: commands_1.default,\n  executor: RedisCluster.prototype.commandsExecutor\n});","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/cluster/index.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_RedisCluster_instances","_RedisCluster_options","_RedisCluster_slots","_RedisCluster_Multi","_RedisCluster_execute","Object","defineProperty","exports","commands_1","require","cluster_slots_1","commander_1","events_1","multi_command_1","RedisCluster","EventEmitter","constructor","options","add","default","err","emit","extend","extractFirstKey","command","originalArgs","redisArgs","FIRST_KEY_INDEX","undefined","create","extendWithModulesAndScripts","BaseClass","modules","modulesCommandsExecutor","prototype","commandsExecutor","scripts","scriptsExecutor","duplicate","overrides","getPrototypeOf","connect","args","transformCommandArguments","transformCommandReply","sendCommand","IS_READ_ONLY","preserve","firstKey","isReadonly","client","script","executeScript","multi","routing","commands","chainId","multiExecutor","getMasters","getSlotMaster","slot","quit","disconnect","WeakMap","WeakSet","executor","_a","_b","maxCommandRedirections","getClient","i","Error","message","startsWith","address","substring","lastIndexOf","getNodeByAddress","asking","rediscover","redirectTo","extendWithCommands"],"mappings":"AAAA;;AACA,IAAIA,sBAAsB,GAAI,QAAQ,KAAKA,sBAAd,IAAyC,UAAUC,QAAV,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,CAAxC,EAA2C;AAC7G,MAAID,IAAI,KAAK,GAAb,EAAkB,MAAM,IAAIE,SAAJ,CAAc,gCAAd,CAAN;AAClB,MAAIF,IAAI,KAAK,GAAT,IAAgB,CAACC,CAArB,EAAwB,MAAM,IAAIC,SAAJ,CAAc,+CAAd,CAAN;AACxB,MAAI,OAAOJ,KAAP,KAAiB,UAAjB,GAA8BD,QAAQ,KAAKC,KAAb,IAAsB,CAACG,CAArD,GAAyD,CAACH,KAAK,CAACK,GAAN,CAAUN,QAAV,CAA9D,EAAmF,MAAM,IAAIK,SAAJ,CAAc,yEAAd,CAAN;AACnF,SAAQF,IAAI,KAAK,GAAT,GAAeC,CAAC,CAACG,IAAF,CAAOP,QAAP,EAAiBE,KAAjB,CAAf,GAAyCE,CAAC,GAAGA,CAAC,CAACF,KAAF,GAAUA,KAAb,GAAqBD,KAAK,CAACO,GAAN,CAAUR,QAAV,EAAoBE,KAApB,CAAhE,EAA6FA,KAApG;AACH,CALD;;AAMA,IAAIO,sBAAsB,GAAI,QAAQ,KAAKA,sBAAd,IAAyC,UAAUT,QAAV,EAAoBC,KAApB,EAA2BE,IAA3B,EAAiCC,CAAjC,EAAoC;AACtG,MAAID,IAAI,KAAK,GAAT,IAAgB,CAACC,CAArB,EAAwB,MAAM,IAAIC,SAAJ,CAAc,+CAAd,CAAN;AACxB,MAAI,OAAOJ,KAAP,KAAiB,UAAjB,GAA8BD,QAAQ,KAAKC,KAAb,IAAsB,CAACG,CAArD,GAAyD,CAACH,KAAK,CAACK,GAAN,CAAUN,QAAV,CAA9D,EAAmF,MAAM,IAAIK,SAAJ,CAAc,0EAAd,CAAN;AACnF,SAAOF,IAAI,KAAK,GAAT,GAAeC,CAAf,GAAmBD,IAAI,KAAK,GAAT,GAAeC,CAAC,CAACG,IAAF,CAAOP,QAAP,CAAf,GAAkCI,CAAC,GAAGA,CAAC,CAACF,KAAL,GAAaD,KAAK,CAACS,GAAN,CAAUV,QAAV,CAA1E;AACH,CAJD;;AAKA,IAAIW,uBAAJ,EAA6BC,qBAA7B,EAAoDC,mBAApD,EAAyEC,mBAAzE,EAA8FC,qBAA9F;;AACAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEhB,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMiB,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMI,eAAe,GAAGJ,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAMK,YAAN,SAA2BF,QAAQ,CAACG,YAApC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB;;AACAjB,IAAAA,uBAAuB,CAACkB,GAAxB,CAA4B,IAA5B;;AACAjB,IAAAA,qBAAqB,CAACJ,GAAtB,CAA0B,IAA1B,EAAgC,KAAK,CAArC;;AACAK,IAAAA,mBAAmB,CAACL,GAApB,CAAwB,IAAxB,EAA8B,KAAK,CAAnC;;AACAM,IAAAA,mBAAmB,CAACN,GAApB,CAAwB,IAAxB,EAA8B,KAAK,CAAnC;;AACAT,IAAAA,sBAAsB,CAAC,IAAD,EAAOa,qBAAP,EAA8BgB,OAA9B,EAAuC,GAAvC,CAAtB;;AACA7B,IAAAA,sBAAsB,CAAC,IAAD,EAAOc,mBAAP,EAA4B,IAAIQ,eAAe,CAACS,OAApB,CAA4BF,OAA5B,EAAqCG,GAAG,IAAI,KAAKC,IAAL,CAAU,OAAV,EAAmBD,GAAnB,CAA5C,CAA5B,EAAkG,GAAlG,CAAtB;;AACAhC,IAAAA,sBAAsB,CAAC,IAAD,EAAOe,mBAAP,EAA4BU,eAAe,CAACM,OAAhB,CAAwBG,MAAxB,CAA+BL,OAA/B,CAA5B,EAAqE,GAArE,CAAtB;AACH;;AACqB,SAAfM,eAAe,CAACC,OAAD,EAAUC,YAAV,EAAwBC,SAAxB,EAAmC;AACrD,QAAIF,OAAO,CAACG,eAAR,KAA4BC,SAAhC,EAA2C;AACvC,aAAOA,SAAP;AACH,KAFD,MAGK,IAAI,OAAOJ,OAAO,CAACG,eAAf,KAAmC,QAAvC,EAAiD;AAClD,aAAOD,SAAS,CAACF,OAAO,CAACG,eAAT,CAAhB;AACH;;AACD,WAAOH,OAAO,CAACG,eAAR,CAAwB,GAAGF,YAA3B,CAAP;AACH;;AACY,SAANI,MAAM,CAACZ,OAAD,EAAU;AACnB,WAAO,KAAK,CAAC,GAAGN,WAAW,CAACmB,2BAAhB,EAA6C;AACrDC,MAAAA,SAAS,EAAEjB,YAD0C;AAErDkB,MAAAA,OAAO,EAAEf,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACe,OAFd;AAGrDC,MAAAA,uBAAuB,EAAEnB,YAAY,CAACoB,SAAb,CAAuBC,gBAHK;AAIrDC,MAAAA,OAAO,EAAEnB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACmB,OAJd;AAKrDC,MAAAA,eAAe,EAAEvB,YAAY,CAACoB,SAAb,CAAuBG;AALa,KAA7C,CAAL,EAMHpB,OANG,CAAP;AAOH;;AACDqB,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB,WAAO,KAAKlC,MAAM,CAACmC,cAAP,CAAsB,IAAtB,EAA4BxB,WAAjC,EAA8C,EACjD,GAAGlB,sBAAsB,CAAC,IAAD,EAAOG,qBAAP,EAA8B,GAA9B,CADwB;AAEjD,SAAGsC;AAF8C,KAA9C,CAAP;AAIH;;AACY,QAAPE,OAAO,GAAG;AACZ,WAAO3C,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuDuC,OAAvD,EAAP;AACH;;AACqB,QAAhBN,gBAAgB,CAACX,OAAD,EAAUkB,IAAV,EAAgB;AAClC,UAAM;AAAEA,MAAAA,IAAI,EAAEhB,SAAR;AAAmBT,MAAAA;AAAnB,QAA+B,CAAC,GAAGN,WAAW,CAACgC,yBAAhB,EAA2CnB,OAA3C,EAAoDkB,IAApD,CAArC;AACA,WAAO,CAAC,GAAG/B,WAAW,CAACiC,qBAAhB,EAAuCpB,OAAvC,EAAgD,MAAM,KAAKqB,WAAL,CAAiB/B,YAAY,CAACS,eAAb,CAA6BC,OAA7B,EAAsCkB,IAAtC,EAA4ChB,SAA5C,CAAjB,EAAyEF,OAAO,CAACsB,YAAjF,EAA+FpB,SAA/F,EAA0GT,OAA1G,CAAtD,EAA0KS,SAAS,CAACqB,QAApL,CAAP;AACH;;AACgB,QAAXF,WAAW,CAACG,QAAD,EAAWC,UAAX,EAAuBP,IAAvB,EAA6BzB,OAA7B,EAAsC;AACnD,WAAOnB,sBAAsB,CAAC,IAAD,EAAOE,uBAAP,EAAgC,GAAhC,EAAqCI,qBAArC,CAAtB,CAAkFR,IAAlF,CAAuF,IAAvF,EAA6FoD,QAA7F,EAAuGC,UAAvG,EAAmHC,MAAM,IAAIA,MAAM,CAACL,WAAP,CAAmBH,IAAnB,EAAyBzB,OAAzB,CAA7H,CAAP;AACH;;AACoB,QAAfoB,eAAe,CAACc,MAAD,EAAST,IAAT,EAAe;AAChC,UAAM;AAAEA,MAAAA,IAAI,EAAEhB,SAAR;AAAmBT,MAAAA;AAAnB,QAA+B,CAAC,GAAGN,WAAW,CAACgC,yBAAhB,EAA2CQ,MAA3C,EAAmDT,IAAnD,CAArC;AACA,WAAO,CAAC,GAAG/B,WAAW,CAACiC,qBAAhB,EAAuCO,MAAvC,EAA+C,MAAM,KAAKC,aAAL,CAAmBD,MAAnB,EAA2BT,IAA3B,EAAiChB,SAAjC,EAA4CT,OAA5C,CAArD,EAA2GS,SAAS,CAACqB,QAArH,CAAP;AACH;;AACkB,QAAbK,aAAa,CAACD,MAAD,EAAS1B,YAAT,EAAuBC,SAAvB,EAAkCT,OAAlC,EAA2C;AAC1D,WAAOnB,sBAAsB,CAAC,IAAD,EAAOE,uBAAP,EAAgC,GAAhC,EAAqCI,qBAArC,CAAtB,CAAkFR,IAAlF,CAAuF,IAAvF,EAA6FkB,YAAY,CAACS,eAAb,CAA6B4B,MAA7B,EAAqC1B,YAArC,EAAmDC,SAAnD,CAA7F,EAA4JyB,MAAM,CAACL,YAAnK,EAAiLI,MAAM,IAAIA,MAAM,CAACE,aAAP,CAAqBD,MAArB,EAA6BzB,SAA7B,EAAwCT,OAAxC,CAA3L,CAAP;AACH;;AACDoC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACX,WAAO,KAAKxD,sBAAsB,CAAC,IAAD,EAAOK,mBAAP,EAA4B,GAA5B,CAA3B,EAA6D,CAACoD,QAAD,EAAWP,QAAX,EAAqBQ,OAArB,KAAiC;AACjG,aAAO1D,sBAAsB,CAAC,IAAD,EAAOE,uBAAP,EAAgC,GAAhC,EAAqCI,qBAArC,CAAtB,CAAkFR,IAAlF,CAAuF,IAAvF,EAA6FoD,QAA7F,EAAuG,KAAvG,EAA8GE,MAAM,IAAIA,MAAM,CAACO,aAAP,CAAqBF,QAArB,EAA+BC,OAA/B,CAAxH,CAAP;AACH,KAFM,EAEJF,OAFI,CAAP;AAGH;;AACDI,EAAAA,UAAU,GAAG;AACT,WAAO5D,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuDwD,UAAvD,EAAP;AACH;;AACDC,EAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,WAAO9D,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuDyD,aAAvD,CAAqEC,IAArE,CAAP;AACH;;AACDC,EAAAA,IAAI,GAAG;AACH,WAAO/D,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuD2D,IAAvD,EAAP;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,WAAOhE,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuD4D,UAAvD,EAAP;AACH;;AApE4C;;AAsEjDvD,OAAO,CAACY,OAAR,GAAkBL,YAAlB;AACAb,qBAAqB,GAAG,IAAI8D,OAAJ,EAAxB,EAAuC7D,mBAAmB,GAAG,IAAI6D,OAAJ,EAA7D,EAA4E5D,mBAAmB,GAAG,IAAI4D,OAAJ,EAAlG,EAAiH/D,uBAAuB,GAAG,IAAIgE,OAAJ,EAA3I,EAA0J5D,qBAAqB,GAAG,eAAeA,qBAAf,CAAqC4C,QAArC,EAA+CC,UAA/C,EAA2DgB,QAA3D,EAAqE;AACnP,MAAIC,EAAJ,EAAQC,EAAR;;AACA,QAAMC,sBAAsB,GAAG,CAACF,EAAE,GAAGpE,sBAAsB,CAAC,IAAD,EAAOG,qBAAP,EAA8B,GAA9B,CAAtB,CAAyDmE,sBAA/D,MAA2F,IAA3F,IAAmGF,EAAE,KAAK,KAAK,CAA/G,GAAmHA,EAAnH,GAAwH,EAAvJ;;AACA,MAAIhB,MAAM,GAAGpD,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuDmE,SAAvD,CAAiErB,QAAjE,EAA2EC,UAA3E,CAAb;;AACA,OAAK,IAAIqB,CAAC,GAAG,CAAb,GAAiBA,CAAC,EAAlB,EAAsB;AAClB,QAAI;AACA,aAAO,MAAML,QAAQ,CAACf,MAAD,CAArB;AACH,KAFD,CAGA,OAAO9B,GAAP,EAAY;AACR,UAAI,EAAEkD,CAAF,GAAMF,sBAAN,IAAgC,EAAEhD,GAAG,YAAYmD,KAAjB,CAApC,EAA6D;AACzD,cAAMnD,GAAN;AACH;;AACD,UAAIA,GAAG,CAACoD,OAAJ,CAAYC,UAAZ,CAAuB,KAAvB,CAAJ,EAAmC;AAC/B,cAAMC,OAAO,GAAGtD,GAAG,CAACoD,OAAJ,CAAYG,SAAZ,CAAsBvD,GAAG,CAACoD,OAAJ,CAAYI,WAAZ,CAAwB,GAAxB,IAA+B,CAArD,CAAhB;;AACA,YAAI,CAAC,CAACT,EAAE,GAAGrE,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuD2E,gBAAvD,CAAwEH,OAAxE,CAAN,MAA4F,IAA5F,IAAoGP,EAAE,KAAK,KAAK,CAAhH,GAAoH,KAAK,CAAzH,GAA6HA,EAAE,CAACjB,MAAjI,MAA6IA,MAAjJ,EAAyJ;AACrJ,gBAAMA,MAAM,CAAC4B,MAAP,EAAN;AACA;AACH;;AACD,cAAMhF,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuD6E,UAAvD,CAAkE7B,MAAlE,CAAN;;AACA,cAAM8B,UAAU,GAAGlF,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuD2E,gBAAvD,CAAwEH,OAAxE,CAAnB;;AACA,YAAI,CAACM,UAAL,EAAiB;AACb,gBAAM,IAAIT,KAAJ,CAAW,oBAAmBG,OAAQ,EAAtC,CAAN;AACH;;AACD,cAAMM,UAAU,CAAC9B,MAAX,CAAkB4B,MAAlB,EAAN;AACA5B,QAAAA,MAAM,GAAG8B,UAAU,CAAC9B,MAApB;AACA;AACH,OAdD,MAeK,IAAI9B,GAAG,CAACoD,OAAJ,CAAYC,UAAZ,CAAuB,OAAvB,CAAJ,EAAqC;AACtC,cAAM3E,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuD6E,UAAvD,CAAkE7B,MAAlE,CAAN;AACAA,QAAAA,MAAM,GAAGpD,sBAAsB,CAAC,IAAD,EAAOI,mBAAP,EAA4B,GAA5B,CAAtB,CAAuDmE,SAAvD,CAAiErB,QAAjE,EAA2EC,UAA3E,CAAT;AACA;AACH;;AACD,YAAM7B,GAAN;AACH;AACJ;AACJ,CAnCD;AAoCA,CAAC,GAAGT,WAAW,CAACsE,kBAAhB,EAAoC;AAChClD,EAAAA,SAAS,EAAEjB,YADqB;AAEhCyC,EAAAA,QAAQ,EAAE/C,UAAU,CAACW,OAFW;AAGhC8C,EAAAA,QAAQ,EAAEnD,YAAY,CAACoB,SAAb,CAAuBC;AAHD,CAApC","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RedisCluster_instances, _RedisCluster_options, _RedisCluster_slots, _RedisCluster_Multi, _RedisCluster_execute;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commands_1 = require(\"./commands\");\nconst cluster_slots_1 = require(\"./cluster-slots\");\nconst commander_1 = require(\"../commander\");\nconst events_1 = require(\"events\");\nconst multi_command_1 = require(\"./multi-command\");\nclass RedisCluster extends events_1.EventEmitter {\n    constructor(options) {\n        super();\n        _RedisCluster_instances.add(this);\n        _RedisCluster_options.set(this, void 0);\n        _RedisCluster_slots.set(this, void 0);\n        _RedisCluster_Multi.set(this, void 0);\n        __classPrivateFieldSet(this, _RedisCluster_options, options, \"f\");\n        __classPrivateFieldSet(this, _RedisCluster_slots, new cluster_slots_1.default(options, err => this.emit('error', err)), \"f\");\n        __classPrivateFieldSet(this, _RedisCluster_Multi, multi_command_1.default.extend(options), \"f\");\n    }\n    static extractFirstKey(command, originalArgs, redisArgs) {\n        if (command.FIRST_KEY_INDEX === undefined) {\n            return undefined;\n        }\n        else if (typeof command.FIRST_KEY_INDEX === 'number') {\n            return redisArgs[command.FIRST_KEY_INDEX];\n        }\n        return command.FIRST_KEY_INDEX(...originalArgs);\n    }\n    static create(options) {\n        return new ((0, commander_1.extendWithModulesAndScripts)({\n            BaseClass: RedisCluster,\n            modules: options === null || options === void 0 ? void 0 : options.modules,\n            modulesCommandsExecutor: RedisCluster.prototype.commandsExecutor,\n            scripts: options === null || options === void 0 ? void 0 : options.scripts,\n            scriptsExecutor: RedisCluster.prototype.scriptsExecutor\n        }))(options);\n    }\n    duplicate(overrides) {\n        return new (Object.getPrototypeOf(this).constructor)({\n            ...__classPrivateFieldGet(this, _RedisCluster_options, \"f\"),\n            ...overrides\n        });\n    }\n    async connect() {\n        return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").connect();\n    }\n    async commandsExecutor(command, args) {\n        const { args: redisArgs, options } = (0, commander_1.transformCommandArguments)(command, args);\n        return (0, commander_1.transformCommandReply)(command, await this.sendCommand(RedisCluster.extractFirstKey(command, args, redisArgs), command.IS_READ_ONLY, redisArgs, options), redisArgs.preserve);\n    }\n    async sendCommand(firstKey, isReadonly, args, options) {\n        return __classPrivateFieldGet(this, _RedisCluster_instances, \"m\", _RedisCluster_execute).call(this, firstKey, isReadonly, client => client.sendCommand(args, options));\n    }\n    async scriptsExecutor(script, args) {\n        const { args: redisArgs, options } = (0, commander_1.transformCommandArguments)(script, args);\n        return (0, commander_1.transformCommandReply)(script, await this.executeScript(script, args, redisArgs, options), redisArgs.preserve);\n    }\n    async executeScript(script, originalArgs, redisArgs, options) {\n        return __classPrivateFieldGet(this, _RedisCluster_instances, \"m\", _RedisCluster_execute).call(this, RedisCluster.extractFirstKey(script, originalArgs, redisArgs), script.IS_READ_ONLY, client => client.executeScript(script, redisArgs, options));\n    }\n    multi(routing) {\n        return new (__classPrivateFieldGet(this, _RedisCluster_Multi, \"f\"))((commands, firstKey, chainId) => {\n            return __classPrivateFieldGet(this, _RedisCluster_instances, \"m\", _RedisCluster_execute).call(this, firstKey, false, client => client.multiExecutor(commands, chainId));\n        }, routing);\n    }\n    getMasters() {\n        return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getMasters();\n    }\n    getSlotMaster(slot) {\n        return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getSlotMaster(slot);\n    }\n    quit() {\n        return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").quit();\n    }\n    disconnect() {\n        return __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").disconnect();\n    }\n}\nexports.default = RedisCluster;\n_RedisCluster_options = new WeakMap(), _RedisCluster_slots = new WeakMap(), _RedisCluster_Multi = new WeakMap(), _RedisCluster_instances = new WeakSet(), _RedisCluster_execute = async function _RedisCluster_execute(firstKey, isReadonly, executor) {\n    var _a, _b;\n    const maxCommandRedirections = (_a = __classPrivateFieldGet(this, _RedisCluster_options, \"f\").maxCommandRedirections) !== null && _a !== void 0 ? _a : 16;\n    let client = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getClient(firstKey, isReadonly);\n    for (let i = 0;; i++) {\n        try {\n            return await executor(client);\n        }\n        catch (err) {\n            if (++i > maxCommandRedirections || !(err instanceof Error)) {\n                throw err;\n            }\n            if (err.message.startsWith('ASK')) {\n                const address = err.message.substring(err.message.lastIndexOf(' ') + 1);\n                if (((_b = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getNodeByAddress(address)) === null || _b === void 0 ? void 0 : _b.client) === client) {\n                    await client.asking();\n                    continue;\n                }\n                await __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").rediscover(client);\n                const redirectTo = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getNodeByAddress(address);\n                if (!redirectTo) {\n                    throw new Error(`Cannot find node ${address}`);\n                }\n                await redirectTo.client.asking();\n                client = redirectTo.client;\n                continue;\n            }\n            else if (err.message.startsWith('MOVED')) {\n                await __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").rediscover(client);\n                client = __classPrivateFieldGet(this, _RedisCluster_slots, \"f\").getClient(firstKey, isReadonly);\n                continue;\n            }\n            throw err;\n        }\n    }\n};\n(0, commander_1.extendWithCommands)({\n    BaseClass: RedisCluster,\n    commands: commands_1.default,\n    executor: RedisCluster.prototype.commandsExecutor\n});\n"]},"metadata":{},"sourceType":"script"}