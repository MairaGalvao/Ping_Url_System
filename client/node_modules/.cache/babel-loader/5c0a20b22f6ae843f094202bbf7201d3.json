{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/Developer Projects/system-ping-project/client/src/Ping/PingComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Slider from \"@mui/material/Slider\";\nimport PingDummy from \"./PingDummy\";\nimport { Typography } from \"@mui/material\";\nimport \"./style-ping.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PingComponent() {\n  _s();\n\n  const [userUrl, setUserUrl] = useState(\"\");\n  const [pingData, setPingData] = useState();\n  const [urlData, setUrlData] = useState([]);\n  const [packetCount, setPacketCount] = useState(1);\n\n  function triggerPing() {\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"aplication/json\",\n        url: userUrl,\n        packets: packetCount\n      }\n    }).then(res => res.json(console.log(res, \" i am the res\"))).then(data => {\n      setPingData(data.pingData);\n      setUrlData(data.urlData);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      class: \"pingMain\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Ping form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), \"Host:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setUserUrl(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          class: \"loader\",\n          children: [\" \", \"Count: \", packetCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        className: \"slider\",\n        max: 20,\n        value: packetCount,\n        onChange: (event, newValue) => {\n          setPacketCount(newValue);\n        },\n        \"aria-label\": \"Disabled slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: triggerPing,\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ouput:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"50\",\n        rows: \"20\",\n        value: JSON.stringify(pingData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PingDummy, {\n      urlData: urlData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PingComponent, \"2tro/1ULuGLnlWN/AqXlfIgsi7g=\");\n\n_c = PingComponent;\nexport default PingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PingComponent\");","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/client/src/Ping/PingComponent.js"],"names":["React","useState","Box","Button","Slider","PingDummy","Typography","PingComponent","userUrl","setUserUrl","pingData","setPingData","urlData","setUrlData","packetCount","setPacketCount","triggerPing","fetch","method","headers","url","packets","then","res","json","console","log","data","event","target","value","newValue","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Slider from \"@mui/material/Slider\";\nimport PingDummy from \"./PingDummy\";\nimport { Typography } from \"@mui/material\";\nimport \"./style-ping.css\";\n\nfunction PingComponent() {\n\tconst [userUrl, setUserUrl] = useState(\"\");\n\tconst [pingData, setPingData] = useState();\n\tconst [urlData, setUrlData] = useState([]);\n\tconst [packetCount, setPacketCount] = useState(1);\n\n\tfunction triggerPing() {\n\t\tfetch(\"/api\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-type\": \"aplication/json\",\n\t\t\t\turl: userUrl,\n\t\t\t\tpackets: packetCount,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json(console.log(res, \" i am the res\")))\n\t\t\t.then((data) => {\n\t\t\t\tsetPingData(data.pingData);\n\t\t\t\tsetUrlData(data.urlData);\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Box class=\"pingMain\">\n\t\t\t\t{\" \"}\n\t\t\t\t<Typography variant=\"h3\">Ping form</Typography>\n\t\t\t\tHost:{\" \"}\n\t\t\t\t<input onChange={(event) => setUserUrl(event.target.value)}></input>\n\t\t\t\t<Box>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<Typography variant=\"h3\" class=\"loader\">\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tCount: {packetCount}\n\t\t\t\t\t</Typography>{\" \"}\n\t\t\t\t</Box>\n\t\t\t\t<Slider\n\t\t\t\t\tclassName=\"slider\"\n\t\t\t\t\tmax={20}\n\t\t\t\t\tvalue={packetCount}\n\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\tsetPacketCount(newValue);\n\t\t\t\t\t}}\n\t\t\t\t\taria-label=\"Disabled slider\"\n\t\t\t\t/>\n\t\t\t\t<Button variant=\"outlined\" onClick={triggerPing}>\n\t\t\t\t\tRun\n\t\t\t\t</Button>\n\t\t\t\t<h2>Ouput:</h2>\n\t\t\t\t<textarea\n\t\t\t\t\tcols=\"50\"\n\t\t\t\t\trows=\"20\"\n\t\t\t\t\tvalue={JSON.stringify(pingData, null, 2)}\n\t\t\t\t></textarea>\n\t\t\t</Box>\n\t\t\t<PingDummy urlData={urlData} />\n\t\t</>\n\t);\n}\n\nexport default PingComponent;\n"]},"metadata":{},"sourceType":"module"}