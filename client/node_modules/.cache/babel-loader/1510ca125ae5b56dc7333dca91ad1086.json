{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nexports.FIRST_KEY_INDEX = 2;\nexports.IS_READ_ONLY = true;\n\nfunction transformArguments(key) {\n  return ['XINFO', 'GROUPS', key];\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(rawReply) {\n  return rawReply.map(group => ({\n    name: group[1],\n    consumers: group[3],\n    pending: group[5],\n    lastDeliveredId: group[7]\n  }));\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/XINFO_GROUPS.js"],"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","key","rawReply","map","group","name","consumers","pending","lastDeliveredId"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,eAAR,GAA0B,KAAK,CAA5G;AACAL,OAAO,CAACK,eAAR,GAA0B,CAA1B;AACAL,OAAO,CAACI,YAAR,GAAuB,IAAvB;;AACA,SAASD,kBAAT,CAA4BG,GAA5B,EAAiC;AAC7B,SAAO,CAAC,OAAD,EAAU,QAAV,EAAoBA,GAApB,CAAP;AACH;;AACDN,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBK,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,GAAT,CAAaC,KAAK,KAAK;AAC1BC,IAAAA,IAAI,EAAED,KAAK,CAAC,CAAD,CADe;AAE1BE,IAAAA,SAAS,EAAEF,KAAK,CAAC,CAAD,CAFU;AAG1BG,IAAAA,OAAO,EAAEH,KAAK,CAAC,CAAD,CAHY;AAI1BI,IAAAA,eAAe,EAAEJ,KAAK,CAAC,CAAD;AAJI,GAAL,CAAlB,CAAP;AAMH;;AACDT,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nexports.FIRST_KEY_INDEX = 2;\nexports.IS_READ_ONLY = true;\nfunction transformArguments(key) {\n    return ['XINFO', 'GROUPS', key];\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(rawReply) {\n    return rawReply.map(group => ({\n        name: group[1],\n        consumers: group[3],\n        pending: group[5],\n        lastDeliveredId: group[7]\n    }));\n}\nexports.transformReply = transformReply;\n"]},"metadata":{},"sourceType":"script"}