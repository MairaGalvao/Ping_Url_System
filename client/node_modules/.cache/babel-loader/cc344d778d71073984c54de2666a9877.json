{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformArguments = exports.FIRST_KEY_INDEX = void 0;\nexports.FIRST_KEY_INDEX = 1;\n\nfunction transformArguments() {\n  for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n    _ref[_key] = arguments[_key];\n  }\n\n  let [key, value, fieldValue] = _ref;\n  const args = ['HSET', key];\n\n  if (typeof value === 'string' || typeof value === 'number' || Buffer.isBuffer(value)) {\n    pushValue(args, value);\n    pushValue(args, fieldValue);\n  } else if (value instanceof Map) {\n    pushMap(args, value);\n  } else if (Array.isArray(value)) {\n    pushTuples(args, value);\n  } else {\n    pushObject(args, value);\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nfunction pushMap(args, map) {\n  for (const [key, value] of map.entries()) {\n    pushValue(args, key);\n    pushValue(args, value);\n  }\n}\n\nfunction pushTuples(args, tuples) {\n  for (const tuple of tuples) {\n    if (Array.isArray(tuple)) {\n      pushTuples(args, tuple);\n      continue;\n    }\n\n    pushValue(args, tuple);\n  }\n}\n\nfunction pushObject(args, object) {\n  for (const key of Object.keys(object)) {\n    args.push(key.toString(), object[key].toString());\n  }\n}\n\nfunction pushValue(args, value) {\n  args.push(typeof value === 'number' ? value.toString() : value);\n}","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/HSET.js"],"names":["Object","defineProperty","exports","value","transformArguments","FIRST_KEY_INDEX","key","fieldValue","args","Buffer","isBuffer","pushValue","Map","pushMap","Array","isArray","pushTuples","pushObject","map","entries","tuples","tuple","object","keys","push","toString"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,eAAR,GAA0B,KAAK,CAA5D;AACAH,OAAO,CAACG,eAAR,GAA0B,CAA1B;;AACA,SAASD,kBAAT,GAAyD;AAAA;AAAA;AAAA;;AAAA,MAA1B,CAACE,GAAD,EAAMH,KAAN,EAAaI,UAAb,CAA0B;AACrD,QAAMC,IAAI,GAAG,CAAC,MAAD,EAASF,GAAT,CAAb;;AACA,MAAI,OAAOH,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,IAA0DM,MAAM,CAACC,QAAP,CAAgBP,KAAhB,CAA9D,EAAsF;AAClFQ,IAAAA,SAAS,CAACH,IAAD,EAAOL,KAAP,CAAT;AACAQ,IAAAA,SAAS,CAACH,IAAD,EAAOD,UAAP,CAAT;AACH,GAHD,MAIK,IAAIJ,KAAK,YAAYS,GAArB,EAA0B;AAC3BC,IAAAA,OAAO,CAACL,IAAD,EAAOL,KAAP,CAAP;AACH,GAFI,MAGA,IAAIW,KAAK,CAACC,OAAN,CAAcZ,KAAd,CAAJ,EAA0B;AAC3Ba,IAAAA,UAAU,CAACR,IAAD,EAAOL,KAAP,CAAV;AACH,GAFI,MAGA;AACDc,IAAAA,UAAU,CAACT,IAAD,EAAOL,KAAP,CAAV;AACH;;AACD,SAAOK,IAAP;AACH;;AACDN,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AACA,SAASS,OAAT,CAAiBL,IAAjB,EAAuBU,GAAvB,EAA4B;AACxB,OAAK,MAAM,CAACZ,GAAD,EAAMH,KAAN,CAAX,IAA2Be,GAAG,CAACC,OAAJ,EAA3B,EAA0C;AACtCR,IAAAA,SAAS,CAACH,IAAD,EAAOF,GAAP,CAAT;AACAK,IAAAA,SAAS,CAACH,IAAD,EAAOL,KAAP,CAAT;AACH;AACJ;;AACD,SAASa,UAAT,CAAoBR,IAApB,EAA0BY,MAA1B,EAAkC;AAC9B,OAAK,MAAMC,KAAX,IAAoBD,MAApB,EAA4B;AACxB,QAAIN,KAAK,CAACC,OAAN,CAAcM,KAAd,CAAJ,EAA0B;AACtBL,MAAAA,UAAU,CAACR,IAAD,EAAOa,KAAP,CAAV;AACA;AACH;;AACDV,IAAAA,SAAS,CAACH,IAAD,EAAOa,KAAP,CAAT;AACH;AACJ;;AACD,SAASJ,UAAT,CAAoBT,IAApB,EAA0Bc,MAA1B,EAAkC;AAC9B,OAAK,MAAMhB,GAAX,IAAkBN,MAAM,CAACuB,IAAP,CAAYD,MAAZ,CAAlB,EAAuC;AACnCd,IAAAA,IAAI,CAACgB,IAAL,CAAUlB,GAAG,CAACmB,QAAJ,EAAV,EAA0BH,MAAM,CAAChB,GAAD,CAAN,CAAYmB,QAAZ,EAA1B;AACH;AACJ;;AACD,SAASd,SAAT,CAAmBH,IAAnB,EAAyBL,KAAzB,EAAgC;AAC5BK,EAAAA,IAAI,CAACgB,IAAL,CAAU,OAAOrB,KAAP,KAAiB,QAAjB,GACNA,KAAK,CAACsB,QAAN,EADM,GAENtB,KAFJ;AAGH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformArguments = exports.FIRST_KEY_INDEX = void 0;\nexports.FIRST_KEY_INDEX = 1;\nfunction transformArguments(...[key, value, fieldValue]) {\n    const args = ['HSET', key];\n    if (typeof value === 'string' || typeof value === 'number' || Buffer.isBuffer(value)) {\n        pushValue(args, value);\n        pushValue(args, fieldValue);\n    }\n    else if (value instanceof Map) {\n        pushMap(args, value);\n    }\n    else if (Array.isArray(value)) {\n        pushTuples(args, value);\n    }\n    else {\n        pushObject(args, value);\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction pushMap(args, map) {\n    for (const [key, value] of map.entries()) {\n        pushValue(args, key);\n        pushValue(args, value);\n    }\n}\nfunction pushTuples(args, tuples) {\n    for (const tuple of tuples) {\n        if (Array.isArray(tuple)) {\n            pushTuples(args, tuple);\n            continue;\n        }\n        pushValue(args, tuple);\n    }\n}\nfunction pushObject(args, object) {\n    for (const key of Object.keys(object)) {\n        args.push(key.toString(), object[key].toString());\n    }\n}\nfunction pushValue(args, value) {\n    args.push(typeof value === 'number' ?\n        value.toString() :\n        value);\n}\n"]},"metadata":{},"sourceType":"script"}