{"ast":null,"code":"'use strict';\n/**\n* LICENSE MIT\n* (C) Daniel Zelisko\n* http://github.com/danielzzz/node-ping\n*\n* a simple wrapper for ping\n* Now with support of not only english Windows.\n*\n*/\n// Promise implementation\n\nvar ping = require('./ping-promise'); // TODO:\n// 1. Port round trip time to this callback\n// 2. However, it may breaks backward compatability\n// 3. Need discussion\n\n/**\n * Callback after probing given host\n * @callback probeCallback\n * @param {boolean} isAlive - Whether target is alive or not\n * @param {Object} error - Null if no error occurs\n */\n\n/**\n * Class::Ping construtor\n * @param {string} addr - Hostname or ip addres\n * @param {probeCallback} cb - Callback\n * @param {PingConfig} config - Configuration for command ping\n */\n\n\nfunction probe(addr, cb, config) {\n  // Do not reassign function parameter\n  var _config = config || {};\n\n  return ping.probe(addr, _config).then(function (res) {\n    cb(res.alive, null);\n  }).catch(function (err) {\n    cb(null, err);\n  }).done();\n}\n\nexports.probe = probe;","map":{"version":3,"sources":["/home/maira/Desktop/system-ping-project/client/node_modules/ping/lib/ping-sys.js"],"names":["ping","require","probe","addr","cb","config","_config","then","res","alive","catch","err","done","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAAlB,C,CAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,IAAf,EAAqBC,EAArB,EAAyBC,MAAzB,EAAiC;AAC7B;AACA,MAAIC,OAAO,GAAGD,MAAM,IAAI,EAAxB;;AAEA,SAAOL,IAAI,CAACE,KAAL,CAAWC,IAAX,EAAiBG,OAAjB,EAA0BC,IAA1B,CAA+B,UAAUC,GAAV,EAAe;AACjDJ,IAAAA,EAAE,CAACI,GAAG,CAACC,KAAL,EAAY,IAAZ,CAAF;AACH,GAFM,EAEJC,KAFI,CAEE,UAAUC,GAAV,EAAe;AACpBP,IAAAA,EAAE,CAAC,IAAD,EAAOO,GAAP,CAAF;AACH,GAJM,EAIJC,IAJI,EAAP;AAKH;;AAEDC,OAAO,CAACX,KAAR,GAAgBA,KAAhB","sourcesContent":["'use strict';\n\n/**\n* LICENSE MIT\n* (C) Daniel Zelisko\n* http://github.com/danielzzz/node-ping\n*\n* a simple wrapper for ping\n* Now with support of not only english Windows.\n*\n*/\n\n// Promise implementation\nvar ping = require('./ping-promise');\n\n// TODO:\n// 1. Port round trip time to this callback\n// 2. However, it may breaks backward compatability\n// 3. Need discussion\n/**\n * Callback after probing given host\n * @callback probeCallback\n * @param {boolean} isAlive - Whether target is alive or not\n * @param {Object} error - Null if no error occurs\n */\n\n/**\n * Class::Ping construtor\n * @param {string} addr - Hostname or ip addres\n * @param {probeCallback} cb - Callback\n * @param {PingConfig} config - Configuration for command ping\n */\nfunction probe(addr, cb, config) {\n    // Do not reassign function parameter\n    var _config = config || {};\n\n    return ping.probe(addr, _config).then(function (res) {\n        cb(res.alive, null);\n    }).catch(function (err) {\n        cb(null, err);\n    }).done();\n}\n\nexports.probe = probe;\n"]},"metadata":{},"sourceType":"script"}