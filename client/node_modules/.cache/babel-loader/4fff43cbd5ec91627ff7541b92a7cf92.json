{"ast":null,"code":"var _jsxFileName = \"/home/maira/Desktop/Developer Projects/system-ping-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport AppDummy from './AppDummy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(redisObj) {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [userUrl, setUserUrl] = useState('');\n  const [postId, setPostId] = useState('');\n  const [counterEachPing, setCounter] = useState(0);\n  const [updatedValue, setUpdatedValue] = useState(0);\n  const [pingData, setPingData] = useState(0);\n  const [urlData, setUrlData] = useState(0);\n\n  function triggerPing() {\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: {\n        'Content-type': \"aplication/json\",\n        'url': userUrl\n      } // body: JSON.stringify({url: url }) \n\n    }).then(res => res.json(console.log(res, ' i am the res'))).then(data => {\n      setUpdatedValue(data.myValueUpdated);\n      setPingData(data.pingData);\n      setUrlData(data.urlData);\n      setData(data.myValueUpdated);\n      console.log(data);\n    });\n  }\n\n  let counter = 5;\n  console.log(updatedValue, '<<<<<<<<<<<<<<<<<<    my updatedValue');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      class: \"pingMain\",\n      children: [\"    \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ping form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 30\n      }, this), \"Host: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setUserUrl(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: 'flex'\n        },\n        children: [\"    \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"loader\",\n          children: [\"  Count:  \", counterEachPing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        disabled: true,\n        defaultValue: 30,\n        \"aria-label\": \"Disabled slider\",\n        style: {\n          width: '50%',\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: triggerPing,\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ouput:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"50\",\n        rows: \"20\",\n        value: JSON.stringify(pingData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AppDummy, {\n      userUrl: userUrl,\n      counter: counter,\n      header1: 'Top Ping Sites',\n      header2: 'Qty',\n      updatedValue: updatedValue,\n      urlData: urlData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"XyYGKNAus8oXbs+MuDPc9o4GvEI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/client/src/App.js"],"names":["React","useState","useEffect","Box","Button","Slider","AppDummy","App","redisObj","data","setData","userUrl","setUserUrl","postId","setPostId","counterEachPing","setCounter","updatedValue","setUpdatedValue","pingData","setPingData","urlData","setUrlData","triggerPing","fetch","method","headers","then","res","json","console","log","myValueUpdated","counter","event","target","value","display","width","margin","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport AppDummy from './AppDummy'\n\nfunction App(redisObj) {\n  const [data, setData] = React.useState(null);\n  const [userUrl, setUserUrl] = useState('')\n  const [postId, setPostId] = useState('')\n  const [counterEachPing, setCounter] = useState(0)\n  const [updatedValue, setUpdatedValue] = useState(0)\n  const [pingData, setPingData]  = useState(0)\n  const [urlData, setUrlData]  = useState(0)\n  \n\n\nfunction triggerPing() {\n  \n  fetch(\"/api\", {\n    method: \"POST\",\n    headers: {\n      'Content-type' : \"aplication/json\",\n      'url' : userUrl,\n\n            },\n    // body: JSON.stringify({url: url }) \n})\n .then((res) => res.json(console.log(res, ' i am the res')))\n .then((data) => {\n  setUpdatedValue(data.myValueUpdated)\n  setPingData(data.pingData)\n  setUrlData(data.urlData)\n  setData(data.myValueUpdated)\n  console.log(data)\n  })\n\n  \n}\n\nlet counter = 5\n\n\nconsole.log(updatedValue, '<<<<<<<<<<<<<<<<<<    my updatedValue')\n\n  return <> \n \n   <Box class=\"pingMain\">    <h1>Ping form</h1>\n    \n\n     Host: <input  onChange={event => setUserUrl(event.target.value)}></input>\n  \n  <Box style={{display:'flex'}}>    <h2 class=\"loader\">  Count:  {counterEachPing}</h2> </Box>\n    <Slider disabled defaultValue={30} aria-label=\"Disabled slider\" style={{width:'50%', margin:'10px'}}/>\n      <Button  variant=\"outlined\" onClick={triggerPing}>Run</Button>\n    <h2>\n    Ouput:\n    </h2>\n  \n\n\n\n\n   \n\n\n <textarea  cols=\"50\"\n                rows=\"20\" value={JSON.stringify(pingData, null, 2) }></textarea>\n\n\n    </Box>\n  <AppDummy userUrl={userUrl} counter={counter} header1={'Top Ping Sites'} header2={'Qty'} \n      updatedValue={updatedValue} urlData={urlData}\n      />\n  \n  </>\n  \n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}