{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = void 0;\n\nfunction transformArguments() {\n  return ['CLUSTER', 'SLOTS'];\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(reply) {\n  return reply.map(_ref => {\n    let [from, to, master, ...replicas] = _ref;\n    return {\n      from,\n      to,\n      master: transformNode(master),\n      replicas: replicas.map(transformNode)\n    };\n  });\n}\n\nexports.transformReply = transformReply;\n\nfunction transformNode(_ref2) {\n  let [ip, port, id] = _ref2;\n  return {\n    ip,\n    port,\n    id\n  };\n}","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/CLUSTER_SLOTS.js"],"names":["Object","defineProperty","exports","value","transformReply","transformArguments","reply","map","from","to","master","replicas","transformNode","ip","port","id"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6B,KAAK,CAA3D;;AACA,SAASA,kBAAT,GAA8B;AAC1B,SAAO,CAAC,SAAD,EAAY,OAAZ,CAAP;AACH;;AACDH,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBE,KAAxB,EAA+B;AAC3B,SAAOA,KAAK,CAACC,GAAN,CAAU,QAAqC;AAAA,QAApC,CAACC,IAAD,EAAOC,EAAP,EAAWC,MAAX,EAAmB,GAAGC,QAAtB,CAAoC;AAClD,WAAO;AACHH,MAAAA,IADG;AAEHC,MAAAA,EAFG;AAGHC,MAAAA,MAAM,EAAEE,aAAa,CAACF,MAAD,CAHlB;AAIHC,MAAAA,QAAQ,EAAEA,QAAQ,CAACJ,GAAT,CAAaK,aAAb;AAJP,KAAP;AAMH,GAPM,CAAP;AAQH;;AACDV,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AACA,SAASQ,aAAT,QAAuC;AAAA,MAAhB,CAACC,EAAD,EAAKC,IAAL,EAAWC,EAAX,CAAgB;AACnC,SAAO;AACHF,IAAAA,EADG;AAEHC,IAAAA,IAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = void 0;\nfunction transformArguments() {\n    return ['CLUSTER', 'SLOTS'];\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    return reply.map(([from, to, master, ...replicas]) => {\n        return {\n            from,\n            to,\n            master: transformNode(master),\n            replicas: replicas.map(transformNode)\n        };\n    });\n}\nexports.transformReply = transformReply;\nfunction transformNode([ip, port, id]) {\n    return {\n        ip,\n        port,\n        id\n    };\n}\n"]},"metadata":{},"sourceType":"script"}