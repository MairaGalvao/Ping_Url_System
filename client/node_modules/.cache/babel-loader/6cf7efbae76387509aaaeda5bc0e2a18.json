{"ast":null,"code":"'use strict';\n/**\n * A builder builds command line arguments for ping in mac environment\n * @module lib/builder/mac\n */\n\nvar util = require('util');\n\nvar builder = {};\n/**\n * Cross platform config representation\n * @typedef {Object} PingConfig\n * @property {boolean} numeric - Map IP address to hostname or not\n * @property {number} timeout - Time to wait for a response, in seconds.\n * The option affects only timeout  in  absence  of any responses,\n * otherwise ping waits for two RTTs.\n * @property {number} deadline - Specify a timeout, in seconds,\n * before ping exits regardless of how many packets have been sent or received.\n * In this case ping does not stop after count packet are sent,\n * it waits either for deadline expire or until count probes are answered\n * or for some error notification from network.\n * This option is only available on linux and mac.\n * @property {number} min_reply - Exit after sending number of ECHO_REQUEST\n * @property {boolean} v6 - Use IPv4 (default) or IPv6\n * @property {string} sourceAddr - source address for sending the ping\n * @property {number} packetSize - Specifies the number of data bytes to be sent\n *                                 Default: Linux / MAC: 56 Bytes,\n *                                          Window: 32 Bytes\n * @property {string[]} extra - Optional options does not provided\n */\n\nvar defaultConfig = {\n  numeric: true,\n  timeout: 2,\n  deadline: false,\n  min_reply: 1,\n  v6: false,\n  sourceAddr: '',\n  packetSize: 56,\n  extra: []\n};\n/**\n * Get the finalized array of command line arguments\n * @param {string} target - hostname or ip address\n * @param {PingConfig} [config] - Configuration object for cmd line argument\n * @return {string[]} - Command line argument according to the configuration\n * @throws If there are errors on building arguments with given inputs\n */\n\nbuilder.getCommandArguments = function (target, config) {\n  var _config = config || {}; // Empty argument\n\n\n  var ret = []; // Make every key in config has been setup properly\n\n  var keys = ['numeric', 'timeout', 'deadline', 'min_reply', 'v6', 'sourceAddr', 'extra', 'packetSize'];\n  keys.forEach(function (k) {\n    // Falsy value will be overridden without below checking\n    if (typeof _config[k] !== 'boolean') {\n      _config[k] = _config[k] || defaultConfig[k];\n    }\n  });\n\n  if (_config.numeric) {\n    ret.push('-n');\n  }\n\n  if (_config.timeout) {\n    // XXX: There is no timeout option on mac's ping6\n    if (config.v6) {\n      throw new Error('There is no timeout option on ping6');\n    }\n\n    ret = ret.concat(['-W', util.format('%d', _config.timeout * 1000)]);\n  }\n\n  if (_config.deadline) {\n    ret = ret.concat(['-t', util.format('%d', _config.deadline)]);\n  }\n\n  if (_config.min_reply) {\n    ret = ret.concat(['-c', util.format('%d', _config.min_reply)]);\n  }\n\n  if (_config.sourceAddr) {\n    ret = ret.concat(['-S', util.format('%s', _config.sourceAddr)]);\n  }\n\n  if (_config.packetSize) {\n    ret = ret.concat(['-s', util.format('%d', _config.packetSize)]);\n  }\n\n  if (_config.extra) {\n    ret = ret.concat(_config.extra);\n  }\n\n  ret.push(target);\n  return ret;\n};\n/**\n * Compute an option object for child_process.spawn\n * @return {object} - Refer to document of child_process.spawn\n */\n\n\nbuilder.getSpawnOptions = function () {\n  return {};\n};\n\nmodule.exports = builder;","map":{"version":3,"sources":["/home/maira/Desktop/system-ping-project/client/node_modules/ping/lib/builder/mac.js"],"names":["util","require","builder","defaultConfig","numeric","timeout","deadline","min_reply","v6","sourceAddr","packetSize","extra","getCommandArguments","target","config","_config","ret","keys","forEach","k","push","Error","concat","format","getSpawnOptions","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * A builder builds command line arguments for ping in mac environment\n * @module lib/builder/mac\n */\nvar util = require('util');\n\nvar builder = {};\n\n/**\n * Cross platform config representation\n * @typedef {Object} PingConfig\n * @property {boolean} numeric - Map IP address to hostname or not\n * @property {number} timeout - Time to wait for a response, in seconds.\n * The option affects only timeout  in  absence  of any responses,\n * otherwise ping waits for two RTTs.\n * @property {number} deadline - Specify a timeout, in seconds,\n * before ping exits regardless of how many packets have been sent or received.\n * In this case ping does not stop after count packet are sent,\n * it waits either for deadline expire or until count probes are answered\n * or for some error notification from network.\n * This option is only available on linux and mac.\n * @property {number} min_reply - Exit after sending number of ECHO_REQUEST\n * @property {boolean} v6 - Use IPv4 (default) or IPv6\n * @property {string} sourceAddr - source address for sending the ping\n * @property {number} packetSize - Specifies the number of data bytes to be sent\n *                                 Default: Linux / MAC: 56 Bytes,\n *                                          Window: 32 Bytes\n * @property {string[]} extra - Optional options does not provided\n */\n\nvar defaultConfig = {\n    numeric: true,\n    timeout: 2,\n    deadline: false,\n    min_reply: 1,\n    v6: false,\n    sourceAddr: '',\n    packetSize: 56,\n    extra: [],\n};\n\n/**\n * Get the finalized array of command line arguments\n * @param {string} target - hostname or ip address\n * @param {PingConfig} [config] - Configuration object for cmd line argument\n * @return {string[]} - Command line argument according to the configuration\n * @throws If there are errors on building arguments with given inputs\n */\nbuilder.getCommandArguments = function (target, config) {\n    var _config = config || {};\n\n    // Empty argument\n    var ret = [];\n\n    // Make every key in config has been setup properly\n    var keys = ['numeric', 'timeout', 'deadline', 'min_reply', 'v6',\n        'sourceAddr', 'extra', 'packetSize'];\n    keys.forEach(function (k) {\n        // Falsy value will be overridden without below checking\n        if (typeof(_config[k]) !== 'boolean') {\n            _config[k] = _config[k] || defaultConfig[k];\n        }\n    });\n\n    if (_config.numeric) {\n        ret.push('-n');\n    }\n\n    if (_config.timeout) {\n        // XXX: There is no timeout option on mac's ping6\n        if (config.v6) {\n            throw new Error('There is no timeout option on ping6');\n        }\n\n        ret = ret.concat([\n            '-W',\n            util.format('%d', _config.timeout * 1000),\n        ]);\n    }\n\n    if (_config.deadline) {\n        ret = ret.concat([\n            '-t',\n            util.format('%d', _config.deadline),\n        ]);\n    }\n\n    if (_config.min_reply) {\n        ret = ret.concat([\n            '-c',\n            util.format('%d', _config.min_reply),\n        ]);\n    }\n\n    if (_config.sourceAddr) {\n        ret = ret.concat([\n            '-S',\n            util.format('%s', _config.sourceAddr),\n        ]);\n    }\n\n    if (_config.packetSize) {\n        ret = ret.concat([\n            '-s',\n            util.format('%d', _config.packetSize),\n        ]);\n    }\n\n    if (_config.extra) {\n        ret = ret.concat(_config.extra);\n    }\n\n    ret.push(target);\n\n    return ret;\n};\n\n/**\n * Compute an option object for child_process.spawn\n * @return {object} - Refer to document of child_process.spawn\n */\nbuilder.getSpawnOptions = function () {\n    return {};\n};\n\n\nmodule.exports = builder;\n"]},"metadata":{},"sourceType":"script"}