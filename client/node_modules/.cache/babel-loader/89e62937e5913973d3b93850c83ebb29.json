{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\n\nconst FIRST_KEY_INDEX = streams => {\n  return Array.isArray(streams) ? streams[0].key : streams.key;\n};\n\nexports.FIRST_KEY_INDEX = FIRST_KEY_INDEX;\nexports.IS_READ_ONLY = true;\n\nfunction transformArguments(streams, options) {\n  const args = ['XREAD'];\n\n  if (options === null || options === void 0 ? void 0 : options.COUNT) {\n    args.push('COUNT', options.COUNT.toString());\n  }\n\n  if (typeof (options === null || options === void 0 ? void 0 : options.BLOCK) === 'number') {\n    args.push('BLOCK', options.BLOCK.toString());\n  }\n\n  args.push('STREAMS');\n  const streamsArray = Array.isArray(streams) ? streams : [streams],\n        argsLength = args.length;\n\n  for (let i = 0; i < streamsArray.length; i++) {\n    const stream = streamsArray[i];\n    args[argsLength + i] = stream.key;\n    args[argsLength + streamsArray.length + i] = stream.id;\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nvar generic_transformers_1 = require(\"./generic-transformers\");\n\nObject.defineProperty(exports, \"transformReply\", {\n  enumerable: true,\n  get: function () {\n    return generic_transformers_1.transformStreamsMessagesReply;\n  }\n});","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/XREAD.js"],"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","streams","Array","isArray","key","options","args","COUNT","push","toString","BLOCK","streamsArray","argsLength","length","i","stream","id","generic_transformers_1","require","enumerable","get","transformStreamsMessagesReply"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,eAAR,GAA0B,KAAK,CAA5G;;AACA,MAAMA,eAAe,GAAIC,OAAD,IAAa;AACjC,SAAOC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAO,CAAC,CAAD,CAAP,CAAWG,GAApC,GAA0CH,OAAO,CAACG,GAAzD;AACH,CAFD;;AAGAT,OAAO,CAACK,eAAR,GAA0BA,eAA1B;AACAL,OAAO,CAACI,YAAR,GAAuB,IAAvB;;AACA,SAASD,kBAAT,CAA4BG,OAA5B,EAAqCI,OAArC,EAA8C;AAC1C,QAAMC,IAAI,GAAG,CAAC,OAAD,CAAb;;AACA,MAAID,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACE,KAA9D,EAAqE;AACjED,IAAAA,IAAI,CAACE,IAAL,CAAU,OAAV,EAAmBH,OAAO,CAACE,KAAR,CAAcE,QAAd,EAAnB;AACH;;AACD,MAAI,QAAQJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,KAAlE,MAA6E,QAAjF,EAA2F;AACvFJ,IAAAA,IAAI,CAACE,IAAL,CAAU,OAAV,EAAmBH,OAAO,CAACK,KAAR,CAAcD,QAAd,EAAnB;AACH;;AACDH,EAAAA,IAAI,CAACE,IAAL,CAAU,SAAV;AACA,QAAMG,YAAY,GAAGT,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAAxD;AAAA,QAAmEW,UAAU,GAAGN,IAAI,CAACO,MAArF;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACE,MAAjC,EAAyCC,CAAC,EAA1C,EAA8C;AAC1C,UAAMC,MAAM,GAAGJ,YAAY,CAACG,CAAD,CAA3B;AACAR,IAAAA,IAAI,CAACM,UAAU,GAAGE,CAAd,CAAJ,GAAuBC,MAAM,CAACX,GAA9B;AACAE,IAAAA,IAAI,CAACM,UAAU,GAAGD,YAAY,CAACE,MAA1B,GAAmCC,CAApC,CAAJ,GAA6CC,MAAM,CAACC,EAApD;AACH;;AACD,SAAOV,IAAP;AACH;;AACDX,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,IAAImB,sBAAsB,GAAGC,OAAO,CAAC,wBAAD,CAApC;;AACAzB,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,gBAA/B,EAAiD;AAAEwB,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOH,sBAAsB,CAACI,6BAA9B;AAA8D;AAArG,CAAjD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst FIRST_KEY_INDEX = (streams) => {\n    return Array.isArray(streams) ? streams[0].key : streams.key;\n};\nexports.FIRST_KEY_INDEX = FIRST_KEY_INDEX;\nexports.IS_READ_ONLY = true;\nfunction transformArguments(streams, options) {\n    const args = ['XREAD'];\n    if (options === null || options === void 0 ? void 0 : options.COUNT) {\n        args.push('COUNT', options.COUNT.toString());\n    }\n    if (typeof (options === null || options === void 0 ? void 0 : options.BLOCK) === 'number') {\n        args.push('BLOCK', options.BLOCK.toString());\n    }\n    args.push('STREAMS');\n    const streamsArray = Array.isArray(streams) ? streams : [streams], argsLength = args.length;\n    for (let i = 0; i < streamsArray.length; i++) {\n        const stream = streamsArray[i];\n        args[argsLength + i] = stream.key;\n        args[argsLength + streamsArray.length + i] = stream.id;\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\nvar generic_transformers_1 = require(\"./generic-transformers\");\nObject.defineProperty(exports, \"transformReply\", { enumerable: true, get: function () { return generic_transformers_1.transformStreamsMessagesReply; } });\n"]},"metadata":{},"sourceType":"script"}