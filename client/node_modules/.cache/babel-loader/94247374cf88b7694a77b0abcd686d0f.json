{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nexports.FIRST_KEY_INDEX = 1;\nexports.IS_READ_ONLY = true;\n\nfunction transformArguments(key, operations) {\n  const args = ['BITFIELD', key];\n\n  for (const options of operations) {\n    switch (options.operation) {\n      case 'GET':\n        args.push('GET', options.type, options.offset.toString());\n        break;\n\n      case 'SET':\n        args.push('SET', options.type, options.offset.toString(), options.value.toString());\n        break;\n\n      case 'INCRBY':\n        args.push('INCRBY', options.type, options.offset.toString(), options.increment.toString());\n        break;\n\n      case 'OVERFLOW':\n        args.push('OVERFLOW', options.behavior);\n        break;\n    }\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/BITFIELD.js"],"names":["Object","defineProperty","exports","value","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","key","operations","args","options","operation","push","type","offset","toString","increment","behavior"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACI,eAAR,GAA0B,KAAK,CAAnF;AACAJ,OAAO,CAACI,eAAR,GAA0B,CAA1B;AACAJ,OAAO,CAACG,YAAR,GAAuB,IAAvB;;AACA,SAASD,kBAAT,CAA4BG,GAA5B,EAAiCC,UAAjC,EAA6C;AACzC,QAAMC,IAAI,GAAG,CAAC,UAAD,EAAaF,GAAb,CAAb;;AACA,OAAK,MAAMG,OAAX,IAAsBF,UAAtB,EAAkC;AAC9B,YAAQE,OAAO,CAACC,SAAhB;AACI,WAAK,KAAL;AACIF,QAAAA,IAAI,CAACG,IAAL,CAAU,KAAV,EAAiBF,OAAO,CAACG,IAAzB,EAA+BH,OAAO,CAACI,MAAR,CAAeC,QAAf,EAA/B;AACA;;AACJ,WAAK,KAAL;AACIN,QAAAA,IAAI,CAACG,IAAL,CAAU,KAAV,EAAiBF,OAAO,CAACG,IAAzB,EAA+BH,OAAO,CAACI,MAAR,CAAeC,QAAf,EAA/B,EAA0DL,OAAO,CAACP,KAAR,CAAcY,QAAd,EAA1D;AACA;;AACJ,WAAK,QAAL;AACIN,QAAAA,IAAI,CAACG,IAAL,CAAU,QAAV,EAAoBF,OAAO,CAACG,IAA5B,EAAkCH,OAAO,CAACI,MAAR,CAAeC,QAAf,EAAlC,EAA6DL,OAAO,CAACM,SAAR,CAAkBD,QAAlB,EAA7D;AACA;;AACJ,WAAK,UAAL;AACIN,QAAAA,IAAI,CAACG,IAAL,CAAU,UAAV,EAAsBF,OAAO,CAACO,QAA9B;AACA;AAZR;AAcH;;AACD,SAAOR,IAAP;AACH;;AACDP,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nexports.FIRST_KEY_INDEX = 1;\nexports.IS_READ_ONLY = true;\nfunction transformArguments(key, operations) {\n    const args = ['BITFIELD', key];\n    for (const options of operations) {\n        switch (options.operation) {\n            case 'GET':\n                args.push('GET', options.type, options.offset.toString());\n                break;\n            case 'SET':\n                args.push('SET', options.type, options.offset.toString(), options.value.toString());\n                break;\n            case 'INCRBY':\n                args.push('INCRBY', options.type, options.offset.toString(), options.increment.toString());\n                break;\n            case 'OVERFLOW':\n                args.push('OVERFLOW', options.behavior);\n                break;\n        }\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\n"]},"metadata":{},"sourceType":"script"}