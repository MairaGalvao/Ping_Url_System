{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = void 0;\n\nfunction transformArguments(count) {\n  const args = ['ACL', 'LOG'];\n\n  if (count) {\n    args.push(count.toString());\n  }\n\n  return args;\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(reply) {\n  return reply.map(log => ({\n    count: log[1],\n    reason: log[3],\n    context: log[5],\n    object: log[7],\n    username: log[9],\n    ageSeconds: Number(log[11]),\n    clientInfo: log[13]\n  }));\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/client/dist/lib/commands/ACL_LOG.js"],"names":["Object","defineProperty","exports","value","transformReply","transformArguments","count","args","push","toString","reply","map","log","reason","context","object","username","ageSeconds","Number","clientInfo"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6B,KAAK,CAA3D;;AACA,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,QAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,CAAb;;AACA,MAAID,KAAJ,EAAW;AACPC,IAAAA,IAAI,CAACC,IAAL,CAAUF,KAAK,CAACG,QAAN,EAAV;AACH;;AACD,SAAOF,IAAP;AACH;;AACDL,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBM,KAAxB,EAA+B;AAC3B,SAAOA,KAAK,CAACC,GAAN,CAAUC,GAAG,KAAK;AACrBN,IAAAA,KAAK,EAAEM,GAAG,CAAC,CAAD,CADW;AAErBC,IAAAA,MAAM,EAAED,GAAG,CAAC,CAAD,CAFU;AAGrBE,IAAAA,OAAO,EAAEF,GAAG,CAAC,CAAD,CAHS;AAIrBG,IAAAA,MAAM,EAAEH,GAAG,CAAC,CAAD,CAJU;AAKrBI,IAAAA,QAAQ,EAAEJ,GAAG,CAAC,CAAD,CALQ;AAMrBK,IAAAA,UAAU,EAAEC,MAAM,CAACN,GAAG,CAAC,EAAD,CAAJ,CANG;AAOrBO,IAAAA,UAAU,EAAEP,GAAG,CAAC,EAAD;AAPM,GAAL,CAAb,CAAP;AASH;;AACDV,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = void 0;\nfunction transformArguments(count) {\n    const args = ['ACL', 'LOG'];\n    if (count) {\n        args.push(count.toString());\n    }\n    return args;\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    return reply.map(log => ({\n        count: log[1],\n        reason: log[3],\n        context: log[5],\n        object: log[7],\n        username: log[9],\n        ageSeconds: Number(log[11]),\n        clientInfo: log[13]\n    }));\n}\nexports.transformReply = transformReply;\n"]},"metadata":{},"sourceType":"script"}