{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;\n\nconst _1 = require(\".\");\n\nexports.IS_READ_ONLY = true;\n\nfunction transformArguments(filter) {\n  return (0, _1.pushFilterArgument)(['TS.MGET'], filter);\n}\n\nexports.transformArguments = transformArguments;\n\nfunction transformReply(reply) {\n  return reply.map(_ref => {\n    let [key, _, sample] = _ref;\n    return {\n      key,\n      sample: (0, _1.transformSampleReply)(sample)\n    };\n  });\n}\n\nexports.transformReply = transformReply;","map":{"version":3,"sources":["/home/maira/Desktop/Developer Projects/system-ping-project/node_modules/@node-redis/time-series/dist/commands/MGET.js"],"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","_1","require","filter","pushFilterArgument","reply","map","key","_","sample","transformSampleReply"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,YAAR,GAAuB,KAAK,CAAlF;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,GAAD,CAAlB;;AACAN,OAAO,CAACI,YAAR,GAAuB,IAAvB;;AACA,SAASD,kBAAT,CAA4BI,MAA5B,EAAoC;AAChC,SAAO,CAAC,GAAGF,EAAE,CAACG,kBAAP,EAA2B,CAAC,SAAD,CAA3B,EAAwCD,MAAxC,CAAP;AACH;;AACDP,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,cAAT,CAAwBO,KAAxB,EAA+B;AAC3B,SAAOA,KAAK,CAACC,GAAN,CAAU;AAAA,QAAC,CAACC,GAAD,EAAMC,CAAN,EAASC,MAAT,CAAD;AAAA,WAAuB;AACpCF,MAAAA,GADoC;AAEpCE,MAAAA,MAAM,EAAE,CAAC,GAAGR,EAAE,CAACS,oBAAP,EAA6BD,MAA7B;AAF4B,KAAvB;AAAA,GAAV,CAAP;AAIH;;AACDb,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = void 0;\nconst _1 = require(\".\");\nexports.IS_READ_ONLY = true;\nfunction transformArguments(filter) {\n    return (0, _1.pushFilterArgument)(['TS.MGET'], filter);\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    return reply.map(([key, _, sample]) => ({\n        key,\n        sample: (0, _1.transformSampleReply)(sample)\n    }));\n}\nexports.transformReply = transformReply;\n"]},"metadata":{},"sourceType":"script"}